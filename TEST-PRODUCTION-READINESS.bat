@echo off
REM SwanStudios Production Readiness Test Suite
REM ==========================================
REM Continuing from Session Summary - Testing protected endpoints and external connectivity
REM 
REM This script executes the complete test suite for production readiness:
REM 1. Tests protected endpoints with JWT authentication
REM 2. Tests external frontend connectivity
REM 3. Verifies CORS configuration
REM 4. Confirms production deployment status

echo.
echo ===============================================
echo  SwanStudios Production Readiness Test Suite
echo ===============================================
echo.
echo üéØ Continuing from Session Summary
echo ‚úÖ Authentication system verified as working
echo ‚úÖ P0 backend issues resolved  
echo ‚úÖ Server stable on Render
echo.
echo Now testing final integration points...
echo.

REM Step 1: Test Protected Endpoints
echo.
echo üîê STEP 1: Testing Protected Endpoints
echo ======================================
echo Testing JWT authentication and protected routes...
echo.

node test-protected-endpoints.mjs

if %ERRORLEVEL% NEQ 0 (
    echo.
    echo ‚ùå FAILED: Protected endpoints test failed
    echo.
    echo üí° TROUBLESHOOTING:
    echo 1. Ensure backend server is running locally
    echo 2. Verify admin user exists
    echo 3. Check JWT token generation
    echo 4. Review authentication middleware
    echo.
    echo Run individually: node test-protected-endpoints.mjs
    echo.
    pause
    exit /b 1
)

echo.
echo ‚úÖ Protected endpoints test PASSED!
echo.

REM Step 2: Test External Connectivity  
echo.
echo üåê STEP 2: Testing External Frontend Connectivity
echo ==============================================
echo Testing production URL and CORS configuration...
echo.

node test-external-connectivity.mjs

if %ERRORLEVEL% NEQ 0 (
    echo.
    echo ‚ùå FAILED: External connectivity test failed
    echo.
    echo üí° TROUBLESHOOTING:
    echo 1. Check Render service status
    echo 2. Verify production environment variables
    echo 3. Review CORS configuration
    echo 4. Check database connectivity on Render
    echo.
    echo Run individually: node test-external-connectivity.mjs
    echo.
    pause
    exit /b 1
)

echo.
echo ‚úÖ External connectivity test PASSED!
echo.

REM Final Summary
echo.
echo üéâ PRODUCTION READINESS TESTING COMPLETE!
echo ========================================
echo.
echo ‚úÖ All authentication systems functional
echo ‚úÖ Protected endpoints accessible
echo ‚úÖ External connectivity verified
echo ‚úÖ CORS configuration working
echo ‚úÖ Production deployment ready
echo.
echo üöÄ READY FOR FRONTEND INTEGRATION!
echo.
echo üìù NEXT STEPS:
echo 1. Frontend can now safely connect to: https://ss-pt-new.onrender.com
echo 2. Use login endpoint: /api/auth/login
echo 3. Include JWT token in Authorization header
echo 4. Test frontend login flow
echo 5. Implement JWT token persistence and refresh
echo.
echo üîó API ENDPOINTS CONFIRMED WORKING:
echo - POST /api/auth/login (authentication)
echo - GET /api/auth/me (user profile)  
echo - GET /api/storefront (public data)
echo - GET /health (server status)
echo.
echo üíæ Save this success! Consider git commit with message:
echo    "Production testing complete - all systems operational"
echo.

pause
