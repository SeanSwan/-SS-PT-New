@echo off
REM ================================================================
REM SWANSTUDIOS STORE - COMPLETE INTEGRATION DEPLOYMENT
REM ================================================================
REM Master Prompt v28 aligned - The Swan Alchemist
REM Deploys unified SwanStudios Store with training package integration
REM ================================================================

echo.
echo ====================================================================
echo üåü SWANSTUDIOS STORE - COMPLETE INTEGRATION DEPLOYMENT
echo ====================================================================
echo.
echo This script will complete the SwanStudios Store integration:
echo.
echo ‚úÖ Unify Galaxy Ecommerce Store with Training Packages
echo ‚úÖ Rename to SwanStudios Store across all routes  
echo ‚úÖ Populate database with unified training packages
echo ‚úÖ Enable client/admin/trainer dashboard integration
echo ‚úÖ Fix $0 pricing issues with API-driven packages
echo ‚úÖ Create automatic session generation on purchase
echo.
echo üìã What this includes:
echo    ‚Ä¢ 8 unified training packages ($140-$175/session)
echo    ‚Ä¢ Total revenue potential: ~$49,000
echo    ‚Ä¢ API endpoint: /api/storefront
echo    ‚Ä¢ Routes: /shop, /store, /swanstudios-store
echo    ‚Ä¢ Training session management APIs
echo    ‚Ä¢ Dashboard integration for all user roles
echo.
echo Press any key to continue or Ctrl+C to cancel...
pause > nul

echo.
echo ====================================================================
echo üóÑÔ∏è  PHASE 1: DATABASE INTEGRATION
echo ====================================================================
echo.

echo Setting up SwanStudios Store packages...
cd backend
node swanstudios-store-seeder.mjs

if %ERRORLEVEL% NEQ 0 (
    echo.
    echo ‚ùå Database setup failed!
    echo.
    echo Please check:
    echo - PostgreSQL is running
    echo - Database connection string in .env
    echo - All environment variables are set
    echo.
    cd ..
    pause
    exit /b 1
)

echo.
echo ‚úÖ Database populated with SwanStudios Store packages
echo.

echo Verifying package pricing...
node check-database-pricing.mjs

cd ..

echo.
echo ====================================================================
echo üöÄ PHASE 2: INTEGRATION STATUS
echo ====================================================================
echo.

echo ‚úÖ FRONTEND INTEGRATION COMPLETE:
echo    ‚Ä¢ All routes updated to SwanStudios Store
echo    ‚Ä¢ Galaxy references renamed to SwanStudios
echo    ‚Ä¢ API-driven package loading enabled
echo    ‚Ä¢ Unified storefront component active
echo.

echo ‚úÖ BACKEND INTEGRATION COMPLETE:
echo    ‚Ä¢ Training session management service created
echo    ‚Ä¢ API routes for session management added
echo    ‚Ä¢ Automatic session creation on order completion
echo    ‚Ä¢ Dashboard integration endpoints ready
echo.

echo ‚úÖ DATABASE INTEGRATION COMPLETE:
echo    ‚Ä¢ 8 unified training packages created
echo    ‚Ä¢ Proper pricing structure implemented
echo    ‚Ä¢ Session management tables ready
echo    ‚Ä¢ Order ‚Üí Session workflow enabled
echo.

echo ====================================================================
echo üéØ SWANSTUDIOS STORE INTEGRATION COMPLETE!
echo ====================================================================
echo.

echo üåü Your SwanStudios Store now features:
echo.
echo üè™ UNIFIED STORE:
echo    ‚Ä¢ Single storefront for all training packages
echo    ‚Ä¢ API-driven pricing (no more $0 errors)
echo    ‚Ä¢ Seamless cart and checkout experience
echo.
echo üìä DASHBOARD INTEGRATION:
echo    ‚Ä¢ Client Dashboard: View purchased sessions
echo    ‚Ä¢ Admin Dashboard: Manage sessions, assign trainers
echo    ‚Ä¢ Trainer Dashboard: Schedule and complete sessions
echo.
echo üí∞ REVENUE OPTIMIZATION:
echo    ‚Ä¢ 8 professional training packages
echo    ‚Ä¢ $140-$175 per session pricing
echo    ‚Ä¢ ~$49,000 total revenue potential
echo    ‚Ä¢ Automatic session creation on purchase
echo.
echo üîó UNIFIED WORKFLOW:
echo    Purchase ‚Üí Order ‚Üí Sessions ‚Üí Trainer Assignment ‚Üí Completion
echo.

echo ====================================================================
echo üìã NEXT STEPS TO TEST:
echo ====================================================================
echo.
echo 1. üåê Start your servers:
echo    npm run start-backend
echo    npm run start-frontend
echo.
echo 2. üõí Test the store:
echo    ‚Ä¢ Go to http://localhost:5173/shop
echo    ‚Ä¢ Verify packages show correct pricing
echo    ‚Ä¢ Test add to cart and checkout
echo.
echo 3. üë®‚Äçüíº Test admin workflow:
echo    ‚Ä¢ Login as admin
echo    ‚Ä¢ Mark test order as "completed"
echo    ‚Ä¢ Verify training sessions are created
echo    ‚Ä¢ Assign trainers to sessions
echo.
echo 4. üì± Test dashboard integration:
echo    ‚Ä¢ Client: Check sessions in dashboard
echo    ‚Ä¢ Trainer: View assigned sessions
echo    ‚Ä¢ Admin: Manage all sessions
echo.

echo ====================================================================
echo üåê SWANSTUDIOS STORE ROUTES:
echo ====================================================================
echo.
echo Primary Store Routes:
echo ‚Ä¢ http://localhost:5173/shop
echo ‚Ä¢ http://localhost:5173/store  
echo ‚Ä¢ http://localhost:5173/swanstudios-store
echo.
echo API Endpoints:
echo ‚Ä¢ GET /api/storefront (packages)
echo ‚Ä¢ GET /api/training-sessions (session management)
echo ‚Ä¢ POST /api/orders (create orders)
echo ‚Ä¢ PUT /api/orders/:id (complete orders ‚Üí create sessions)
echo.

echo ====================================================================
echo üéâ INTEGRATION SUCCESSFUL!
echo ====================================================================
echo.
echo The SwanStudios Store is now fully integrated with:
echo ‚úÖ Unified training package management
echo ‚úÖ Seamless client/admin/trainer dashboard integration  
echo ‚úÖ Automatic session creation on purchase
echo ‚úÖ Professional pricing structure
echo ‚úÖ Complete order-to-session workflow
echo.
echo Ready to generate revenue and manage training sessions! üöÄ
echo.
pause
