#!/usr/bin/env node\n\n/**\n * Ultra Simple Payment System Check\n * ================================\n * Basic check with detailed logging\n */\n\nconsole.log('üöÄ STARTING ULTRA SIMPLE PAYMENT CHECK');\nconsole.log('=====================================');\n\ntry {\n  console.log('Step 1: Loading modules...');\n  \n  // Load dotenv\n  console.log('  - Loading dotenv...');\n  const dotenv = await import('dotenv');\n  console.log('  ‚úÖ dotenv loaded');\n  \n  // Load fs\n  console.log('  - Loading fs...');\n  const { existsSync } = await import('fs');\n  console.log('  ‚úÖ fs loaded');\n  \n  // Load path\n  console.log('  - Loading path...');\n  const path = await import('path');\n  console.log('  ‚úÖ path loaded');\n  \n  // Get current directory\n  console.log('  - Getting directory paths...');\n  const { fileURLToPath } = await import('url');\n  const __filename = fileURLToPath(import.meta.url);\n  const __dirname = path.dirname(__filename);\n  console.log(`  ‚úÖ Current dir: ${__dirname}`);\n  \n  // Find .env file\n  console.log('Step 2: Finding .env file...');\n  const projectRootDir = path.resolve(__dirname, '..');\n  const envPath = path.resolve(projectRootDir, '.env');\n  console.log(`  - Project root: ${projectRootDir}`);\n  console.log(`  - .env path: ${envPath}`);\n  console.log(`  - .env exists: ${existsSync(envPath)}`);\n  \n  // Load environment\n  console.log('Step 3: Loading environment variables...');\n  if (existsSync(envPath)) {\n    dotenv.config({ path: envPath });\n    console.log('  ‚úÖ .env file loaded');\n  } else {\n    console.log('  ‚ö†Ô∏è .env file not found, using system env');\n    dotenv.config();\n  }\n  \n  // Check environment variables\n  console.log('Step 4: Checking environment variables...');\n  const stripeSecret = process.env.STRIPE_SECRET_KEY;\n  const stripeWebhook = process.env.STRIPE_WEBHOOK_SECRET;\n  const stripePublishable = process.env.VITE_STRIPE_PUBLISHABLE_KEY;\n  \n  console.log(`  - STRIPE_SECRET_KEY: ${stripeSecret ? 'Found (' + stripeSecret.length + ' chars)' : 'Missing'}`);\n  console.log(`  - STRIPE_WEBHOOK_SECRET: ${stripeWebhook ? 'Found (' + stripeWebhook.length + ' chars)' : 'Missing'}`);\n  console.log(`  - VITE_STRIPE_PUBLISHABLE_KEY: ${stripePublishable ? 'Found (' + stripePublishable.length + ' chars)' : 'Missing'}`);\n  \n  // Basic validation\n  console.log('Step 5: Basic validation...');\n  const secretValid = stripeSecret && stripeSecret.startsWith('sk_');\n  const webhookValid = stripeWebhook && stripeWebhook.startsWith('whsec_');\n  const publishableValid = stripePublishable && stripePublishable.startsWith('pk_');\n  \n  console.log(`  - Secret key format: ${secretValid ? '‚úÖ' : '‚ùå'}`);\n  console.log(`  - Webhook secret format: ${webhookValid ? '‚úÖ' : '‚ùå'}`);\n  console.log(`  - Publishable key format: ${publishableValid ? '‚úÖ' : '‚ùå'}`);\n  \n  // Try to import our utilities\n  console.log('Step 6: Testing utility imports...');\n  \n  try {\n    console.log('  - Importing stripeConfig...');\n    const stripeConfigModule = await import('./utils/stripeConfig.mjs');\n    console.log('  ‚úÖ stripeConfig imported');\n    \n    console.log('  - Testing isStripeReady...');\n    const isReady = stripeConfigModule.isStripeReady();\n    console.log(`  - isStripeReady result: ${isReady}`);\n  } catch (error) {\n    console.log(`  ‚ùå stripeConfig import failed: ${error.message}`);\n  }\n  \n  try {\n    console.log('  - Importing apiKeyChecker...');\n    const apiKeyModule = await import('./utils/apiKeyChecker.mjs');\n    console.log('  ‚úÖ apiKeyChecker imported');\n    \n    console.log('  - Testing isStripeEnabled...');\n    const isEnabled = apiKeyModule.isStripeEnabled();\n    console.log(`  - isStripeEnabled result: ${isEnabled}`);\n  } catch (error) {\n    console.log(`  ‚ùå apiKeyChecker import failed: ${error.message}`);\n  }\n  \n  // Final assessment\n  console.log('\\nüìä FINAL ASSESSMENT:');\n  console.log('====================');\n  \n  if (secretValid && webhookValid && publishableValid) {\n    console.log('üéâ ‚úÖ All Stripe keys are present and formatted correctly!');\n    console.log('   Your payment system should be ready to work.');\n  } else {\n    console.log('‚ùå Some Stripe keys are missing or incorrectly formatted:');\n    if (!secretValid) console.log('   - Fix STRIPE_SECRET_KEY');\n    if (!webhookValid) console.log('   - Fix STRIPE_WEBHOOK_SECRET');\n    if (!publishableValid) console.log('   - Fix VITE_STRIPE_PUBLISHABLE_KEY');\n  }\n  \n  console.log('\\n‚úÖ Ultra simple check completed!');\n  \n} catch (error) {\n  console.error('üí• Script failed with error:', error.message);\n  console.error('Stack trace:', error.stack);\n  process.exit(1);\n}