#!/usr/bin/env node\n\n/**\n * Stripe Account Key Analyzer\n * ==========================\n * Helps identify which Stripe accounts your keys belong to\n */\n\nimport dotenv from 'dotenv';\nimport { existsSync } from 'fs';\nimport { fileURLToPath } from 'url';\nimport path from 'path';\n\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = path.dirname(__filename);\n\n// Load environment variables\nconst projectRootDir = path.resolve(__dirname, '..');\nconst envPath = path.resolve(projectRootDir, '.env');\n\nif (existsSync(envPath)) {\n  dotenv.config({ path: envPath });\n}\n\nconsole.log('üîç STRIPE ACCOUNT KEY ANALYZER');\nconsole.log('=============================');\n\nfunction extractAccountInfo(key, keyType) {\n  if (!key) {\n    return { error: 'Key not found' };\n  }\n  \n  // Extract account ID from key\n  const match = key.match(/(sk|pk)_(live|test)_([^_]+)/);\n  if (!match) {\n    return { error: 'Invalid key format' };\n  }\n  \n  const [, type, env, accountId] = match;\n  \n  return {\n    keyType,\n    type,\n    environment: env,\n    accountId,\n    keyLength: key.length,\n    keyPrefix: key.substring(0, 15) + '...',\n    isValid: true\n  };\n}\n\nconst secretKey = process.env.STRIPE_SECRET_KEY;\nconst publishableKey = process.env.VITE_STRIPE_PUBLISHABLE_KEY;\n\nconst secretInfo = extractAccountInfo(secretKey, 'Secret Key');\nconst publishableInfo = extractAccountInfo(publishableKey, 'Publishable Key');\n\nconsole.log('\\nüìã Key Analysis:');\nconsole.log('================');\n\nif (secretInfo.isValid) {\n  console.log(`\\nüîë SECRET KEY:`);\n  console.log(`   Type: ${secretInfo.type}_${secretInfo.environment}_`);\n  console.log(`   Account ID: ${secretInfo.accountId}`);\n  console.log(`   Length: ${secretInfo.keyLength} characters`);\n  console.log(`   Preview: ${secretInfo.keyPrefix}`);\n} else {\n  console.log(`\\n‚ùå SECRET KEY: ${secretInfo.error}`);\n}\n\nif (publishableInfo.isValid) {\n  console.log(`\\nüåê PUBLISHABLE KEY:`);\n  console.log(`   Type: ${publishableInfo.type}_${publishableInfo.environment}_`);\n  console.log(`   Account ID: ${publishableInfo.accountId}`);\n  console.log(`   Length: ${publishableInfo.keyLength} characters`);\n  console.log(`   Preview: ${publishableInfo.keyPrefix}`);\n} else {\n  console.log(`\\n‚ùå PUBLISHABLE KEY: ${publishableInfo.error}`);\n}\n\n// Compare accounts\nif (secretInfo.isValid && publishableInfo.isValid) {\n  console.log('\\nüîó Account Matching:');\n  console.log('===================');\n  \n  const environmentsMatch = secretInfo.environment === publishableInfo.environment;\n  const accountsMatch = secretInfo.accountId === publishableInfo.accountId;\n  \n  console.log(`   Environments match: ${environmentsMatch ? '‚úÖ' : '‚ùå'} (${secretInfo.environment} vs ${publishableInfo.environment})`);\n  console.log(`   Account IDs match: ${accountsMatch ? '‚úÖ' : '‚ùå'}`);\n  \n  if (environmentsMatch && accountsMatch) {\n    console.log('\\nüéâ ‚úÖ PERFECT! Both keys are from the same Stripe account.');\n    console.log(`   Account: ${secretInfo.accountId}`);\n    console.log(`   Environment: ${secretInfo.environment.toUpperCase()}`);\n  } else {\n    console.log('\\nüö® ‚ùå MISMATCH DETECTED!');\n    \n    if (!environmentsMatch) {\n      console.log(`   ‚Ä¢ Environment mismatch: Secret key is ${secretInfo.environment}, Publishable key is ${publishableInfo.environment}`);\n    }\n    \n    if (!accountsMatch) {\n      console.log(`   ‚Ä¢ Account mismatch:`);\n      console.log(`     - Secret key account: ${secretInfo.accountId}`);\n      console.log(`     - Publishable key account: ${publishableInfo.accountId}`);\n    }\n    \n    console.log('\\nüìù TO FIX THIS:');\n    console.log('==============');\n    console.log('1. Log into your Stripe Dashboard: https://dashboard.stripe.com');\n    console.log('2. Go to Developers ‚Üí API Keys');\n    console.log('3. Copy BOTH the secret and publishable keys from the SAME account');\n    console.log('4. Update your .env file with the matching keys');\n    console.log('5. Restart your server');\n    \n    console.log('\\nü§î Which Account Should You Use?');\n    console.log('================================');\n    console.log('Consider these factors:');\n    console.log('‚Ä¢ Which account has your business/payment history?');\n    console.log('‚Ä¢ Which account is set up with your bank details?');\n    console.log('‚Ä¢ Which account has the correct business information?');\n    console.log('‚Ä¢ If unsure, use the account associated with your main business email');\n  }\n}\n\nconsole.log('\\n‚úÖ Analysis complete!');