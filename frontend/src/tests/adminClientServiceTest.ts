/**
 * Test Admin Client Service
 * Simple test to verify the admin client service works correctly
 */

import { createAdminClientService } from '../services/adminClientService';\nimport apiService from '../services/api.service';\n\n// Create a service instance\nconst adminClientService = createAdminClientService(apiService);\n\n// Test function to verify the service\nclass AdminClientServiceTest {\n  static async testConnection() {\n    console.log('🔧 Testing Admin Client Service...');\n    \n    try {\n      // Test 1: Get clients with basic filters\n      console.log('📋 Test 1: Fetching clients...');\n      const clientsResponse = await adminClientService.getClients({\n        page: 1,\n        limit: 5,\n        search: '',\n        status: 'active'\n      });\n      \n      console.log('✅ Clients fetched successfully', {\n        success: clientsResponse.success,\n        totalClients: clientsResponse.data?.clients?.length || 0,\n        hasData: !!clientsResponse.data\n      });\n      \n      // Test 2: Get MCP Status\n      console.log('📊 Test 2: Fetching MCP status...');\n      const mcpResponse = await adminClientService.getMCPStatus();\n      \n      console.log('✅ MCP status fetched successfully', {\n        success: mcpResponse.success,\n        mcpServers: mcpResponse.data?.servers?.length || 0,\n        onlineCount: mcpResponse.data?.summary?.online || 0\n      });\n      \n      return true;\n    } catch (error) {\n      console.error('❌ Admin Client Service test failed:', error);\n      return false;\n    }\n  }\n  \n  static async runAllTests() {\n    console.log('🚀 Starting Admin Client Service Tests...');\n    console.log('=' .repeat(50));\n    \n    const connectionSuccess = await this.testConnection();\n    \n    console.log('=' .repeat(50));\n    if (connectionSuccess) {\n      console.log('🎉 All tests passed! Admin client service is ready.');\n    } else {\n      console.log('⚠️  Some tests failed. The service may work but with reduced functionality.');\n    }\n    \n    return connectionSuccess;\n  }\n}\n\n// Export for use in the application\nexport default AdminClientServiceTest;\n\n// Auto-run tests in development\nif (process.env.NODE_ENV === 'development') {\n  // Run tests after a short delay to allow services to initialize\n  setTimeout(() => {\n    AdminClientServiceTest.runAllTests().catch(console.error);\n  }, 2000);\n}
