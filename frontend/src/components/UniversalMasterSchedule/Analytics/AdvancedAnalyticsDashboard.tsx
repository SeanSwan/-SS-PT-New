/**\n * Advanced Analytics Dashboard for Universal Master Schedule\n * =========================================================\n * \n * Comprehensive business intelligence dashboard providing:\n * - Real-time revenue analytics\n * - Trainer performance metrics\n * - Client retention analysis\n * - Social engagement correlation\n * - Predictive insights\n * - NASM compliance tracking\n * \n * This is the nerve center for data-driven business decisions.\n */\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport styled from 'styled-components';\nimport {\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  LinearProgress,\n  CircularProgress,\n  Chip,\n  Avatar,\n  Box,\n  Button,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel\n} from '@mui/material';\nimport {\n  TrendingUp,\n  TrendingDown,\n  DollarSign,\n  Users,\n  Star,\n  Target,\n  Activity,\n  Award,\n  Calendar,\n  Clock,\n  ArrowUp,\n  ArrowDown,\n  BarChart3,\n  PieChart,\n  LineChart\n} from 'lucide-react';\n\n// Advanced Chart Components (would normally import from recharts)\ninterface ChartProps {\n  data: any[];\n  height?: number;\n}\n\nconst MockLineChart: React.FC<ChartProps> = ({ data, height = 200 }) => (\n  <div style={{ \n    height, \n    background: 'rgba(59, 130, 246, 0.1)', \n    borderRadius: '8px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    border: '1px solid rgba(59, 130, 246, 0.3)'\n  }}>\n    <LineChart size={48} color=\"#3b82f6\" />\n    <Typography sx={{ ml: 2, color: 'white' }}>Revenue Trend Chart</Typography>\n  </div>\n);\n\nconst MockBarChart: React.FC<ChartProps> = ({ data, height = 200 }) => (\n  <div style={{ \n    height, \n    background: 'rgba(34, 197, 94, 0.1)', \n    borderRadius: '8px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    border: '1px solid rgba(34, 197, 94, 0.3)'\n  }}>\n    <BarChart3 size={48} color=\"#22c55e\" />\n    <Typography sx={{ ml: 2, color: 'white' }}>Trainer Performance</Typography>\n  </div>\n);\n\nconst MockPieChart: React.FC<ChartProps> = ({ data, height = 200 }) => (\n  <div style={{ \n    height, \n    background: 'rgba(168, 85, 247, 0.1)', \n    borderRadius: '8px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    border: '1px solid rgba(168, 85, 247, 0.3)'\n  }}>\n    <PieChart size={48} color=\"#a855f7\" />\n    <Typography sx={{ ml: 2, color: 'white' }}>Session Distribution</Typography>\n  </div>\n);\n\ninterface AdvancedAnalyticsDashboardProps {\n  sessions: any[];\n  clients: any[];\n  trainers: any[];\n  dateRange: string;\n  onDateRangeChange: (range: string) => void;\n}\n\nconst AdvancedAnalyticsDashboard: React.FC<AdvancedAnalyticsDashboardProps> = ({\n  sessions,\n  clients,\n  trainers,\n  dateRange,\n  onDateRangeChange\n}) => {\n  const [loading, setLoading] = useState(false);\n  const [analyticsData, setAnalyticsData] = useState({\n    revenue: {\n      total: 25400,\n      growth: 12.5,\n      trend: 'up',\n      daily: 850,\n      weekly: 5950,\n      monthly: 25400\n    },\n    trainers: {\n      active: 8,\n      topPerformer: 'Sarah Johnson',\n      averageRating: 4.8,\n      utilization: 85,\n      retention: 94\n    },\n    clients: {\n      total: 156,\n      active: 142,\n      newThisMonth: 23,\n      retention: 89,\n      averageLifetime: 8.5\n    },\n    sessions: {\n      total: 1240,\n      completed: 1156,\n      cancelled: 84,\n      noShows: 32,\n      completionRate: 93.2\n    },\n    social: {\n      postsGenerated: 445,\n      engagement: 78,\n      challengesCompleted: 234,\n      pointsAwarded: 15600\n    },\n    nasm: {\n      assessmentsCompleted: 89,\n      correctiveExercises: 156,\n      progressTracked: 94,\n      complianceScore: 96\n    }\n  });\n\n  // Calculate key performance indicators\n  const kpis = useMemo(() => {\n    const revenuePerSession = analyticsData.revenue.total / analyticsData.sessions.completed;\n    const clientAcquisitionCost = 45; // Example metric\n    const lifetimeValue = analyticsData.clients.averageLifetime * revenuePerSession * 12;\n    \n    return {\n      revenuePerSession: Math.round(revenuePerSession),\n      clientAcquisitionCost,\n      lifetimeValue: Math.round(lifetimeValue),\n      roi: Math.round((lifetimeValue / clientAcquisitionCost) * 100)\n    };\n  }, [analyticsData]);\n\n  // Trainer performance analysis\n  const trainerMetrics = useMemo(() => {\n    return trainers.map(trainer => ({\n      ...trainer,\n      revenue: Math.floor(Math.random() * 5000) + 2000,\n      sessions: Math.floor(Math.random() * 50) + 20,\n      rating: 4.2 + Math.random() * 0.8,\n      retention: 85 + Math.random() * 15,\n      socialEngagement: Math.floor(Math.random() * 100) + 50\n    })).sort((a, b) => b.revenue - a.revenue);\n  }, [trainers]);\n\n  return (\n    <AnalyticsDashboardContainer>\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5 }}\n      >\n        {/* Header with Controls */}\n        <DashboardHeader>\n          <div>\n            <Typography variant=\"h4\" sx={{ color: 'white', fontWeight: 300 }}>\n              Business Intelligence Center\n            </Typography>\n            <Typography variant=\"subtitle1\" sx={{ color: 'rgba(255,255,255,0.7)' }}>\n              Advanced analytics for data-driven decisions\n            </Typography>\n          </div>\n          \n          <FormControl sx={{ minWidth: 120 }}>\n            <InputLabel sx={{ color: 'white' }}>Period</InputLabel>\n            <Select\n              value={dateRange}\n              onChange={(e) => onDateRangeChange(e.target.value)}\n              sx={{ color: 'white', '& .MuiSvgIcon-root': { color: 'white' } }}\n            >\n              <MenuItem value=\"today\">Today</MenuItem>\n              <MenuItem value=\"week\">This Week</MenuItem>\n              <MenuItem value=\"month\">This Month</MenuItem>\n              <MenuItem value=\"quarter\">This Quarter</MenuItem>\n              <MenuItem value=\"year\">This Year</MenuItem>\n            </Select>\n          </FormControl>\n        </DashboardHeader>\n\n        {/* Key Performance Indicators */}\n        <KPISection>\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={3}>\n              <KPICard>\n                <KPIIcon>\n                  <DollarSign size={24} />\n                </KPIIcon>\n                <KPIContent>\n                  <KPIValue>${analyticsData.revenue.total.toLocaleString()}</KPIValue>\n                  <KPILabel>Total Revenue</KPILabel>\n                  <KPITrend positive={analyticsData.revenue.growth > 0}>\n                    {analyticsData.revenue.growth > 0 ? <ArrowUp size={14} /> : <ArrowDown size={14} />}\n                    {Math.abs(analyticsData.revenue.growth)}%\n                  </KPITrend>\n                </KPIContent>\n              </KPICard>\n            </Grid>\n            \n            <Grid item xs={12} md={3}>\n              <KPICard>\n                <KPIIcon>\n                  <Users size={24} />\n                </KPIIcon>\n                <KPIContent>\n                  <KPIValue>{analyticsData.clients.active}</KPIValue>\n                  <KPILabel>Active Clients</KPILabel>\n                  <KPITrend positive={true}>\n                    <ArrowUp size={14} />\n                    {analyticsData.clients.newThisMonth} new\n                  </KPITrend>\n                </KPIContent>\n              </KPICard>\n            </Grid>\n            \n            <Grid item xs={12} md={3}>\n              <KPICard>\n                <KPIIcon>\n                  <Target size={24} />\n                </KPIIcon>\n                <KPIContent>\n                  <KPIValue>{analyticsData.sessions.completionRate}%</KPIValue>\n                  <KPILabel>Completion Rate</KPILabel>\n                  <KPITrend positive={true}>\n                    <ArrowUp size={14} />\n                    Industry leading\n                  </KPITrend>\n                </KPIContent>\n              </KPICard>\n            </Grid>\n            \n            <Grid item xs={12} md={3}>\n              <KPICard>\n                <KPIIcon>\n                  <Star size={24} />\n                </KPIIcon>\n                <KPIContent>\n                  <KPIValue>{analyticsData.trainers.averageRating}</KPIValue>\n                  <KPILabel>Trainer Rating</KPILabel>\n                  <KPITrend positive={true}>\n                    <ArrowUp size={14} />\n                    Excellent\n                  </KPITrend>\n                </KPIContent>\n              </KPICard>\n            </Grid>\n          </Grid>\n        </KPISection>\n\n        {/* Advanced Metrics Grid */}\n        <MetricsGrid>\n          <Grid container spacing={3}>\n            {/* Revenue Analytics */}\n            <Grid item xs={12} lg={6}>\n              <MetricCard>\n                <Typography variant=\"h6\" sx={{ color: 'white', mb: 2 }}>\n                  Revenue Analytics\n                </Typography>\n                <MockLineChart data={[]} height={250} />\n                <Box sx={{ mt: 2, display: 'flex', justifyContent: 'space-between' }}>\n                  <MetricItem>\n                    <Typography variant=\"body2\" color=\"rgba(255,255,255,0.7)\">\n                      Revenue/Session\n                    </Typography>\n                    <Typography variant=\"h6\" color=\"white\">\n                      ${kpis.revenuePerSession}\n                    </Typography>\n                  </MetricItem>\n                  <MetricItem>\n                    <Typography variant=\"body2\" color=\"rgba(255,255,255,0.7)\">\n                      Client LTV\n                    </Typography>\n                    <Typography variant=\"h6\" color=\"white\">\n                      ${kpis.lifetimeValue.toLocaleString()}\n                    </Typography>\n                  </MetricItem>\n                  <MetricItem>\n                    <Typography variant=\"body2\" color=\"rgba(255,255,255,0.7)\">\n                      ROI\n                    </Typography>\n                    <Typography variant=\"h6\" color=\"white\">\n                      {kpis.roi}%\n                    </Typography>\n                  </MetricItem>\n                </Box>\n              </MetricCard>\n            </Grid>\n\n            {/* Trainer Performance */}\n            <Grid item xs={12} lg={6}>\n              <MetricCard>\n                <Typography variant=\"h6\" sx={{ color: 'white', mb: 2 }}>\n                  Trainer Performance\n                </Typography>\n                <MockBarChart data={[]} height={250} />\n                <Box sx={{ mt: 2 }}>\n                  {trainerMetrics.slice(0, 3).map((trainer, index) => (\n                    <TrainerMetricRow key={trainer.id}>\n                      <Avatar sx={{ width: 32, height: 32 }}>\n                        {trainer.firstName?.[0]}{trainer.lastName?.[0]}\n                      </Avatar>\n                      <div style={{ flex: 1 }}>\n                        <Typography variant=\"body2\" color=\"white\">\n                          {trainer.firstName} {trainer.lastName}\n                        </Typography>\n                        <Typography variant=\"caption\" color=\"rgba(255,255,255,0.7)\">\n                          ${trainer.revenue} revenue • {trainer.sessions} sessions\n                        </Typography>\n                      </div>\n                      <Chip \n                        label={`${trainer.rating.toFixed(1)}★`}\n                        size=\"small\"\n                        sx={{ backgroundColor: 'rgba(34, 197, 94, 0.2)', color: '#22c55e' }}\n                      />\n                    </TrainerMetricRow>\n                  ))}\n                </Box>\n              </MetricCard>\n            </Grid>\n\n            {/* Session Distribution */}\n            <Grid item xs={12} lg={4}>\n              <MetricCard>\n                <Typography variant=\"h6\" sx={{ color: 'white', mb: 2 }}>\n                  Session Distribution\n                </Typography>\n                <MockPieChart data={[]} height={200} />\n                <Box sx={{ mt: 2 }}>\n                  <DistributionItem>\n                    <DistributionDot color=\"#22c55e\" />\n                    <Typography variant=\"body2\" color=\"white\">\n                      Completed: {analyticsData.sessions.completed}\n                    </Typography>\n                  </DistributionItem>\n                  <DistributionItem>\n                    <DistributionDot color=\"#f59e0b\" />\n                    <Typography variant=\"body2\" color=\"white\">\n                      Cancelled: {analyticsData.sessions.cancelled}\n                    </Typography>\n                  </DistributionItem>\n                  <DistributionItem>\n                    <DistributionDot color=\"#ef4444\" />\n                    <Typography variant=\"body2\" color=\"white\">\n                      No Shows: {analyticsData.sessions.noShows}\n                    </Typography>\n                  </DistributionItem>\n                </Box>\n              </MetricCard>\n            </Grid>\n\n            {/* Social Engagement */}\n            <Grid item xs={12} lg={4}>\n              <MetricCard>\n                <Typography variant=\"h6\" sx={{ color: 'white', mb: 2 }}>\n                  Social Engagement\n                </Typography>\n                <SocialMetricItem>\n                  <Activity size={20} color=\"#3b82f6\" />\n                  <div>\n                    <Typography variant=\"body2\" color=\"white\">\n                      {analyticsData.social.postsGenerated} Posts Generated\n                    </Typography>\n                    <Typography variant=\"caption\" color=\"rgba(255,255,255,0.7)\">\n                      From workout completions\n                    </Typography>\n                  </div>\n                </SocialMetricItem>\n                \n                <SocialMetricItem>\n                  <Target size={20} color=\"#22c55e\" />\n                  <div>\n                    <Typography variant=\"body2\" color=\"white\">\n                      {analyticsData.social.challengesCompleted} Challenges Completed\n                    </Typography>\n                    <Typography variant=\"caption\" color=\"rgba(255,255,255,0.7)\">\n                      Community engagement\n                    </Typography>\n                  </div>\n                </SocialMetricItem>\n                \n                <SocialMetricItem>\n                  <Award size={20} color=\"#f59e0b\" />\n                  <div>\n                    <Typography variant=\"body2\" color=\"white\">\n                      {analyticsData.social.pointsAwarded.toLocaleString()} Points Awarded\n                    </Typography>\n                    <Typography variant=\"caption\" color=\"rgba(255,255,255,0.7)\">\n                      Gamification system\n                    </Typography>\n                  </div>\n                </SocialMetricItem>\n                \n                <LinearProgress \n                  variant=\"determinate\" \n                  value={analyticsData.social.engagement} \n                  sx={{ \n                    mt: 2,\n                    backgroundColor: 'rgba(255,255,255,0.1)',\n                    '& .MuiLinearProgress-bar': {\n                      backgroundColor: '#3b82f6'\n                    }\n                  }} \n                />\n                <Typography variant=\"caption\" color=\"rgba(255,255,255,0.7)\" sx={{ mt: 1 }}>\n                  {analyticsData.social.engagement}% Engagement Rate\n                </Typography>\n              </MetricCard>\n            </Grid>\n\n            {/* NASM Compliance */}\n            <Grid item xs={12} lg={4}>\n              <MetricCard>\n                <Typography variant=\"h6\" sx={{ color: 'white', mb: 2 }}>\n                  NASM Compliance\n                </Typography>\n                \n                <ComplianceMetric>\n                  <CircularProgress \n                    variant=\"determinate\" \n                    value={analyticsData.nasm.complianceScore} \n                    sx={{ color: '#22c55e' }}\n                  />\n                  <ComplianceScore>\n                    <Typography variant=\"h4\" color=\"white\">\n                      {analyticsData.nasm.complianceScore}%\n                    </Typography>\n                    <Typography variant=\"caption\" color=\"rgba(255,255,255,0.7)\">\n                      Compliance Score\n                    </Typography>\n                  </ComplianceScore>\n                </ComplianceMetric>\n                \n                <Box sx={{ mt: 2 }}>\n                  <ComplianceItem>\n                    <Typography variant=\"body2\" color=\"white\">\n                      Assessments: {analyticsData.nasm.assessmentsCompleted}\n                    </Typography>\n                  </ComplianceItem>\n                  <ComplianceItem>\n                    <Typography variant=\"body2\" color=\"white\">\n                      Corrective Plans: {analyticsData.nasm.correctiveExercises}\n                    </Typography>\n                  </ComplianceItem>\n                  <ComplianceItem>\n                    <Typography variant=\"body2\" color=\"white\">\n                      Progress Tracked: {analyticsData.nasm.progressTracked}%\n                    </Typography>\n                  </ComplianceItem>\n                </Box>\n              </MetricCard>\n            </Grid>\n          </Grid>\n        </MetricsGrid>\n      </motion.div>\n    </AnalyticsDashboardContainer>\n  );\n};\n\nexport default AdvancedAnalyticsDashboard;\n\n// ==================== STYLED COMPONENTS ====================\n\nconst AnalyticsDashboardContainer = styled.div`\n  padding: 2rem;\n  background: linear-gradient(135deg, #0a0a1a, #1e1e3f);\n  min-height: 100vh;\n`;\n\nconst DashboardHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 2rem;\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n    gap: 1rem;\n    align-items: flex-start;\n  }\n`;\n\nconst KPISection = styled.div`\n  margin-bottom: 2rem;\n`;\n\nconst KPICard = styled.div`\n  background: rgba(255, 255, 255, 0.05);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  border-radius: 12px;\n  padding: 1.5rem;\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n  backdrop-filter: blur(10px);\n  \n  &:hover {\n    background: rgba(255, 255, 255, 0.08);\n    border-color: rgba(255, 255, 255, 0.2);\n  }\n`;\n\nconst KPIIcon = styled.div`\n  width: 48px;\n  height: 48px;\n  border-radius: 50%;\n  background: linear-gradient(135deg, #3b82f6, #1d4ed8);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n`;\n\nconst KPIContent = styled.div`\n  flex: 1;\n`;\n\nconst KPIValue = styled.div`\n  font-size: 1.75rem;\n  font-weight: 600;\n  color: white;\n  margin-bottom: 0.25rem;\n`;\n\nconst KPILabel = styled.div`\n  font-size: 0.875rem;\n  color: rgba(255, 255, 255, 0.7);\n  margin-bottom: 0.5rem;\n`;\n\nconst KPITrend = styled.div<{ positive: boolean }>`\n  display: flex;\n  align-items: center;\n  gap: 0.25rem;\n  font-size: 0.75rem;\n  color: ${props => props.positive ? '#22c55e' : '#ef4444'};\n`;\n\nconst MetricsGrid = styled.div`\n  margin-top: 2rem;\n`;\n\nconst MetricCard = styled.div`\n  background: rgba(255, 255, 255, 0.05);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  border-radius: 12px;\n  padding: 1.5rem;\n  backdrop-filter: blur(10px);\n  height: 100%;\n`;\n\nconst MetricItem = styled.div`\n  text-align: center;\n`;\n\nconst TrainerMetricRow = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.75rem;\n  padding: 0.5rem 0;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n  \n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst DistributionItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  margin-bottom: 0.5rem;\n`;\n\nconst DistributionDot = styled.div<{ color: string }>`\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  background-color: ${props => props.color};\n`;\n\nconst SocialMetricItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.75rem;\n  margin-bottom: 1rem;\n  padding: 0.75rem;\n  background: rgba(255, 255, 255, 0.03);\n  border-radius: 8px;\n  border: 1px solid rgba(255, 255, 255, 0.05);\n`;\n\nconst ComplianceMetric = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  margin-bottom: 1rem;\n`;\n\nconst ComplianceScore = styled.div`\n  position: absolute;\n  text-align: center;\n`;\n\nconst ComplianceItem = styled.div`\n  margin-bottom: 0.5rem;\n  padding: 0.5rem;\n  background: rgba(255, 255, 255, 0.03);\n  border-radius: 6px;\n`;