/**
 * Client Details Modal
 * Comprehensive view of client information, progress, and interactions
 */

import React, { useState } from 'react';
import {
  Dialog,
  DialogTitle,
  DialogContent,
  DialogActions,
  Typography,
  Box,
  Grid,
  Card,
  CardContent,
  Avatar,
  Chip,
  LinearProgress,
  Tabs,
  Tab,
  Button,
  IconButton,
  Divider,
  List,
  ListItem,
  ListItemIcon,
  ListItemText,
  ListItemSecondaryAction,
  Timeline,
  TimelineItem,
  TimelineSeparator,
  TimelineConnector,
  TimelineContent,
  TimelineOppositeContent,
  TimelineDot,
  Paper,
  Rating,
  Accordion,
  AccordionSummary,
  AccordionDetails,
  Table,
  TableBody,
  TableCell,
  TableContainer,
  TableHead,
  TableRow
} from '@mui/material';
import { styled } from '@mui/material/styles';
import {\n  Close,\n  Edit,\n  Message,\n  VideoCall,\n  Phone,\n  Email,\n  FitnessCenter,\n  RestaurantMenu,\n  EmojiEvents,\n  Timeline as TimelineIcon,\n  Assessment,\n  LocalFireDepartment,\n  TrendingUp,\n  ExpandMore,\n  PlayArrow,\n  Insights,\n  Psychology,\n  Warning,\n  CheckCircle,\n  Star,\n  ShowChart,\n  BarChart,\n  PieChart,\n  MonitorWeight,\n  Height,\n  Cake,\n  Wc\n} from '@mui/icons-material';\n\nimport { EnhancedAdminClient } from '../EnhancedAdminClientManagementView';\n\ninterface ClientDetailsModalProps {\n  open: boolean;\n  onClose: () => void;\n  client: EnhancedAdminClient;\n}\n\nconst StyledDialog = styled(Dialog)(({ theme }) => ({\n  '& .MuiDialog-paper': {\n    backgroundColor: '#1d1f2b',\n    color: '#e0e0e0',\n    borderRadius: 12,\n    maxWidth: '90vw',\n    width: 1200,\n    height: '90vh',\n  },\n}));\n\nconst InfoCard = styled(Card)(({ theme }) => ({\n  backgroundColor: 'rgba(255, 255, 255, 0.02)',\n  backdropFilter: 'blur(10px)',\n  borderRadius: 12,\n  border: '1px solid rgba(255, 255, 255, 0.1)',\n  '&:hover': {\n    backgroundColor: 'rgba(255, 255, 255, 0.05)',\n  },\n}));\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: number;\n  value: number;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`client-tabpanel-${index}`}\n      aria-labelledby={`client-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box sx={{ p: 0 }}>{children}</Box>}\n    </div>\n  );\n}\n\nconst ClientDetailsModal: React.FC<ClientDetailsModalProps> = ({ open, onClose, client }) => {\n  const [currentTab, setCurrentTab] = useState(0);\n\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\n    setCurrentTab(newValue);\n  };\n\n  const renderOverviewTab = () => (\n    <Box sx={{ p: 3 }}>\n      <Grid container spacing={3}>\n        {/* Personal Information */}\n        <Grid item xs={12} md={4}>\n          <InfoCard>\n            <CardContent>\n              <Typography variant=\"h6\" sx={{ color: '#00ffff', mb: 2 }}>\n                Personal Information\n              </Typography>\n              <List dense>\n                <ListItem>\n                  <ListItemIcon>\n                    <Email sx={{ color: '#00ffff' }} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Email\" secondary={client.email} />\n                </ListItem>\n                <ListItem>\n                  <ListItemIcon>\n                    <Phone sx={{ color: '#00ffff' }} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Phone\" secondary={client.phone || 'Not provided'} />\n                </ListItem>\n                <ListItem>\n                  <ListItemIcon>\n                    <Cake sx={{ color: '#00ffff' }} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Date of Birth\" secondary={client.dateOfBirth || 'Not provided'} />\n                </ListItem>\n                <ListItem>\n                  <ListItemIcon>\n                    <Wc sx={{ color: '#00ffff' }} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Gender\" secondary={client.gender || 'Not specified'} />\n                </ListItem>\n                <ListItem>\n                  <ListItemIcon>\n                    <MonitorWeight sx={{ color: '#00ffff' }} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Weight\" secondary={client.weight ? `${client.weight} kg` : 'Not recorded'} />\n                </ListItem>\n                <ListItem>\n                  <ListItemIcon>\n                    <Height sx={{ color: '#00ffff' }} />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Height\" secondary={client.height ? `${client.height} cm` : 'Not recorded'} />\n                </ListItem>\n              </List>\n            </CardContent>\n          </InfoCard>\n        </Grid>\n\n        {/* Fitness Overview */}\n        <Grid item xs={12} md={8}>\n          <InfoCard>\n            <CardContent>\n              <Typography variant=\"h6\" sx={{ color: '#00ffff', mb: 2 }}>\n                Fitness Overview\n              </Typography>\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                  <Typography variant=\"body2\" color=\"text.secondary\">Current Program</Typography>\n                  <Typography variant=\"h6\">{client.currentProgram}</Typography>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <Typography variant=\"body2\" color=\"text.secondary\">Assigned Trainer</Typography>\n                  <Typography variant=\"h6\">{client.trainerName || 'No trainer assigned'}</Typography>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <Typography variant=\"body2\" color=\"text.secondary\">Fitness Goal</Typography>\n                  <Typography variant=\"h6\">{client.fitnessGoal}</Typography>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <Typography variant=\"body2\" color=\"text.secondary\">Experience Level</Typography>\n                  <Typography variant=\"h6\" sx={{ textTransform: 'capitalize' }}>{client.trainingExperience}</Typography>\n                </Grid>\n              </Grid>\n              \n              {/* Progress Metrics */}\n              <Box sx={{ mt: 3 }}>\n                <Typography variant=\"h6\" sx={{ mb: 2 }}>Progress Metrics</Typography>\n                <Grid container spacing={2}>\n                  <Grid item xs={6} sm={3}>\n                    <Box sx={{ textAlign: 'center' }}>\n                      <Typography variant=\"h4\" color=\"#4caf50\">{client.totalWorkouts}</Typography>\n                      <Typography variant=\"body2\">Total Workouts</Typography>\n                    </Box>\n                  </Grid>\n                  <Grid item xs={6} sm={3}>\n                    <Box sx={{ textAlign: 'center' }}>\n                      <Typography variant=\"h4\" color=\"#ff9800\">{client.workoutStreak}</Typography>\n                      <Typography variant=\"body2\">Current Streak</Typography>\n                    </Box>\n                  </Grid>\n                  <Grid item xs={6} sm={3}>\n                    <Box sx={{ textAlign: 'center' }}>\n                      <Typography variant=\"h4\" color=\"#00ffff\">{client.availableSessions}</Typography>\n                      <Typography variant=\"body2\">Sessions Left</Typography>\n                    </Box>\n                  </Grid>\n                  <Grid item xs={6} sm={3}>\n                    <Box sx={{ textAlign: 'center' }}>\n                      <Typography variant=\"h4\" color=\"#9c27b0\">{client.progressScore}%</Typography>\n                      <Typography variant=\"body2\">Progress Score</Typography>\n                    </Box>\n                  </Grid>\n                </Grid>\n              </Box>\n            </CardContent>\n          </InfoCard>\n        </Grid>\n\n        {/* Risk Factors & Health */}\n        <Grid item xs={12}>\n          <InfoCard>\n            <CardContent>\n              <Typography variant=\"h6\" sx={{ color: '#00ffff', mb: 2 }}>\n                Health & Safety Information\n              </Typography>\n              <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                  <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>Risk Factors</Typography>\n                  {client.riskFactors.length > 0 ? (\n                    client.riskFactors.map((risk, index) => (\n                      <Chip key={index} label={risk} color=\"warning\" sx={{ mr: 1, mb: 1 }} />\n                    ))\n                  ) : (\n                    <Chip label=\"No risk factors\" color=\"success\" />\n                  )}\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>Health Concerns</Typography>\n                  <Typography>{client.healthConcerns || 'None reported'}</Typography>\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>Allergies</Typography>\n                  {client.allergies && client.allergies.length > 0 ? (\n                    client.allergies.map((allergy, index) => (\n                      <Chip key={index} label={allergy} color=\"error\" variant=\"outlined\" sx={{ mr: 1 }} />\n                    ))\n                  ) : (\n                    <Typography>No known allergies</Typography>\n                  )}\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>Emergency Contact</Typography>\n                  <Typography>{client.emergencyContact || 'Not provided'}</Typography>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </InfoCard>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n\n  const renderProgressTab = () => (\n    <Box sx={{ p: 3 }}>\n      <Grid container spacing={3}>\n        {/* Assessment Comparison */}\n        <Grid item xs={12} md={6}>\n          <InfoCard>\n            <CardContent>\n              <Typography variant=\"h6\" sx={{ color: '#00ffff', mb: 2 }}>\n                Assessment Progress\n              </Typography>\n              {client.initialAssessment && client.latestAssessment && (\n                <Box>\n                  <TableContainer component={Paper} sx={{ bgcolor: 'rgba(255, 255, 255, 0.02)' }}>\n                    <Table size=\"small\">\n                      <TableHead>\n                        <TableRow>\n                          <TableCell>Metric</TableCell>\n                          <TableCell align=\"center\">Initial</TableCell>\n                          <TableCell align=\"center\">Latest</TableCell>\n                          <TableCell align=\"center\">Change</TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {[\n                          { key: 'overall', label: 'Overall' },\n                          { key: 'strength', label: 'Strength' },\n                          { key: 'endurance', label: 'Endurance' },\n                          { key: 'flexibility', label: 'Flexibility' },\n                          { key: 'balance', label: 'Balance' }\n                        ].map((metric) => {\n                          const initial = client.initialAssessment![metric.key as keyof typeof client.initialAssessment];\n                          const latest = client.latestAssessment![metric.key as keyof typeof client.latestAssessment];\n                          const change = latest - initial;\n                          return (\n                            <TableRow key={metric.key}>\n                              <TableCell>{metric.label}</TableCell>\n                              <TableCell align=\"center\">{initial}</TableCell>\n                              <TableCell align=\"center\">{latest}</TableCell>\n                              <TableCell align=\"center\">\n                                <Box sx={{ \n                                  display: 'flex', \n                                  alignItems: 'center', \n                                  justifyContent: 'center',\n                                  color: change > 0 ? '#4caf50' : change < 0 ? '#f44336' : '#999'\n                                }}>\n                                  {change > 0 ? <TrendingUp /> : change < 0 ? <TrendingUp sx={{ transform: 'rotate(180deg)' }} /> : null}\n                                  {change > 0 ? '+' : ''}{change.toFixed(1)}\n                                </Box>\n                              </TableCell>\n                            </TableRow>\n                          );\n                        })}\n                      </TableBody>\n                    </Table>\n                  </TableContainer>\n                </Box>\n              )}\n            </CardContent>\n          </InfoCard>\n        </Grid>\n\n        {/* Body Composition */}\n        {client.bodyComposition && (\n          <Grid item xs={12} md={6}>\n            <InfoCard>\n              <CardContent>\n                <Typography variant=\"h6\" sx={{ color: '#00ffff', mb: 2 }}>\n                  Body Composition\n                </Typography>\n                <Grid container spacing={2}>\n                  <Grid item xs={6}>\n                    <Box sx={{ textAlign: 'center' }}>\n                      <Typography variant=\"h4\" color=\"#ff5722\">{client.bodyComposition.bodyFat}%</Typography>\n                      <Typography variant=\"body2\">Body Fat</Typography>\n                    </Box>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Box sx={{ textAlign: 'center' }}>\n                      <Typography variant=\"h4\" color=\"#4caf50\">{client.bodyComposition.muscleMass}%</Typography>\n                      <Typography variant=\"body2\">Muscle Mass</Typography>\n                    </Box>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Box sx={{ textAlign: 'center' }}>\n                      <Typography variant=\"h4\" color=\"#2196f3\">{client.bodyComposition.waterPercentage}%</Typography>\n                      <Typography variant=\"body2\">Water %</Typography>\n                    </Box>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Box sx={{ textAlign: 'center' }}>\n                      <Typography variant=\"h4\" color=\"#9c27b0\">{client.bodyComposition.metabolicAge}</Typography>\n                      <Typography variant=\"body2\">Metabolic Age</Typography>\n                    </Box>\n                  </Grid>\n                </Grid>\n                <Typography variant=\"caption\" color=\"text.secondary\" sx={{ mt: 2, display: 'block' }}>\n                  Last measured: {new Date(client.bodyComposition.lastMeasured).toLocaleDateString()}\n                </Typography>\n              </CardContent>\n            </InfoCard>\n          </Grid>\n        )}\n      </Grid>\n    </Box>\n  );\n\n  const renderGamificationTab = () => (\n    <Box sx={{ p: 3 }}>\n      <Grid container spacing={3}>\n        {/* Gamification Stats */}\n        <Grid item xs={12} md={6}>\n          <InfoCard>\n            <CardContent>\n              <Typography variant=\"h6\" sx={{ color: '#00ffff', mb: 2 }}>\n                Gamification Status\n              </Typography>\n              <Box sx={{ textAlign: 'center', mb: 3 }}>\n                <Typography variant=\"h3\" color=\"#ffd700\">{client.level}</Typography>\n                <Typography variant=\"h6\">Current Level</Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">{client.rank}</Typography>\n              </Box>\n              \n              <Box sx={{ mb: 2 }}>\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\n                  <Typography variant=\"body2\">XP Progress</Typography>\n                  <Typography variant=\"body2\">{client.xp}/15000 XP</Typography>\n                </Box>\n                <LinearProgress \n                  variant=\"determinate\" \n                  value={(client.xp / 15000) * 100} \n                  sx={{\n                    height: 10,\n                    borderRadius: 5,\n                    bgcolor: 'rgba(255, 255, 255, 0.1)',\n                    '& .MuiLinearProgress-bar': {\n                      bgcolor: 'linear-gradient(90deg, #ffd700, #ffb300)',\n                      borderRadius: 5\n                    }\n                  }}\n                />\n              </Box>\n              \n              <Typography variant=\"body2\" color=\"text.secondary\">\n                XP to next level: {15000 - client.xp}\n              </Typography>\n            </CardContent>\n          </InfoCard>\n        </Grid>\n\n        {/* Achievements */}\n        <Grid item xs={12} md={6}>\n          <InfoCard>\n            <CardContent>\n              <Typography variant=\"h6\" sx={{ color: '#00ffff', mb: 2 }}>\n                Recent Achievements\n              </Typography>\n              <List>\n                {client.achievements.map((achievement) => (\n                  <ListItem key={achievement.id}>\n                    <ListItemIcon>\n                      <Avatar src={achievement.iconUrl} sx={{ width: 32, height: 32 }} />\n                    </ListItemIcon>\n                    <ListItemText\n                      primary={achievement.title}\n                      secondary={achievement.description}\n                    />\n                    <ListItemSecondaryAction>\n                      <Chip label={`+${achievement.points} XP`} size=\"small\" color=\"warning\" />\n                    </ListItemSecondaryAction>\n                  </ListItem>\n                ))}\n              </List>\n            </CardContent>\n          </InfoCard>\n        </Grid>\n\n        {/* Badges */}\n        <Grid item xs={12}>\n          <InfoCard>\n            <CardContent>\n              <Typography variant=\"h6\" sx={{ color: '#00ffff', mb: 2 }}>\n                Collected Badges\n              </Typography>\n              <Grid container spacing={2}>\n                {client.badges.map((badge) => (\n                  <Grid item xs={12} sm={6} md={4} key={badge.id}>\n                    <Card sx={{ \n                      p: 2, \n                      textAlign: 'center',\n                      bgcolor: 'rgba(255, 255, 255, 0.05)',\n                      border: `2px solid ${\n                        badge.rarity === 'legendary' ? '#ffd700' :\n                        badge.rarity === 'epic' ? '#9c27b0' :\n                        badge.rarity === 'rare' ? '#2196f3' : '#4caf50'\n                      }`\n                    }}>\n                      <Avatar src={badge.iconUrl} sx={{ width: 48, height: 48, mx: 'auto', mb: 1 }} />\n                      <Typography variant=\"h6\">{badge.name}</Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">{badge.description}</Typography>\n                      <Chip \n                        label={badge.rarity} \n                        size=\"small\" \n                        sx={{ \n                          mt: 1,\n                          bgcolor: badge.rarity === 'legendary' ? 'rgba(255, 215, 0, 0.2)' :\n                                  badge.rarity === 'epic' ? 'rgba(156, 39, 176, 0.2)' :\n                                  badge.rarity === 'rare' ? 'rgba(33, 150, 243, 0.2)' : 'rgba(76, 175, 80, 0.2)'\n                        }}\n                      />\n                    </Card>\n                  </Grid>\n                ))}\n              </Grid>\n            </CardContent>\n          </InfoCard>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n\n  const renderAIInsightsTab = () => (\n    <Box sx={{ p: 3 }}>\n      <Grid container spacing={3}>\n        {/* AI Insights */}\n        <Grid item xs={12}>\n          <InfoCard>\n            <CardContent>\n              <Typography variant=\"h6\" sx={{ color: '#00ffff', mb: 2 }}>\n                AI-Powered Insights\n              </Typography>\n              <List>\n                {client.aiInsights.map((insight, index) => (\n                  <ListItem key={index}>\n                    <ListItemIcon>\n                      {insight.type === 'recommendation' ? (\n                        <Psychology sx={{ color: '#00ffff' }} />\n                      ) : insight.type === 'warning' ? (\n                        <Warning sx={{ color: '#ff9800' }} />\n                      ) : (\n                        <Star sx={{ color: '#ffd700' }} />\n                      )}\n                    </ListItemIcon>\n                    <ListItemText\n                      primary={insight.title}\n                      secondary={\n                        <Box>\n                          <Typography variant=\"body2\">{insight.description}</Typography>\n                          <Box sx={{ display: 'flex', gap: 1, mt: 1 }}>\n                            <Chip \n                              label={`${(insight.confidence * 100).toFixed(0)}% confidence`} \n                              size=\"small\" \n                              color={insight.confidence > 0.8 ? 'success' : 'warning'}\n                            />\n                            {insight.actionable && (\n                              <Chip label=\"Actionable\" size=\"small\" color=\"info\" />\n                            )}\n                          </Box>\n                        </Box>\n                      }\n                    />\n                  </ListItem>\n                ))}\n              </List>\n            </CardContent>\n          </InfoCard>\n        </Grid>\n\n        {/* Form Analysis Score */}\n        {client.formAnalysisScore && (\n          <Grid item xs={12} md={6}>\n            <InfoCard>\n              <CardContent>\n                <Typography variant=\"h6\" sx={{ color: '#00ffff', mb: 2 }}>\n                  YOLO Form Analysis\n                </Typography>\n                <Box sx={{ textAlign: 'center' }}>\n                  <Typography variant=\"h3\" color={client.formAnalysisScore > 80 ? '#4caf50' : '#ff9800'}>\n                    {client.formAnalysisScore}%\n                  </Typography>\n                  <Typography variant=\"h6\">Form Score</Typography>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    Last checked: {client.lastFormCheck && new Date(client.lastFormCheck).toLocaleDateString()}\n                  </Typography>\n                </Box>\n                <Box sx={{ mt: 2 }}>\n                  <Button variant=\"outlined\" startIcon={<PlayArrow />} fullWidth>\n                    Review Form Analysis Video\n                  </Button>\n                </Box>\n              </CardContent>\n            </InfoCard>\n          </Grid>\n        )}\n      </Grid>\n    </Box>\n  );\n\n  return (\n    <StyledDialog open={open} onClose={onClose} maxWidth={false}>\n      <DialogTitle sx={{ \n        display: 'flex', \n        justifyContent: 'space-between', \n        alignItems: 'center',\n        bgcolor: '#252742',\n        borderBottom: '1px solid rgba(0, 255, 255, 0.2)'\n      }}>\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n          <Avatar \n            src={client.profileImageUrl} \n            sx={{ \n              width: 48, \n              height: 48,\n              border: '2px solid rgba(0, 255, 255, 0.3)'\n            }}\n          >\n            {!client.profileImageUrl && `${client.firstName[0]}${client.lastName[0]}`}\n          </Avatar>\n          <Box>\n            <Typography variant=\"h6\" sx={{ color: '#e0e0e0', fontWeight: 600 }}>\n              {client.firstName} {client.lastName}\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              @{client.username} • Level {client.level}\n            </Typography>\n          </Box>\n        </Box>\n        \n        <Box sx={{ display: 'flex', gap: 1 }}>\n          <Button variant=\"outlined\" startIcon={<Message />} size=\"small\">\n            Message\n          </Button>\n          <Button variant=\"outlined\" startIcon={<VideoCall />} size=\"small\">\n            Video Call\n          </Button>\n          <Button variant=\"outlined\" startIcon={<Edit />} size=\"small\">\n            Edit\n          </Button>\n          <IconButton onClick={onClose} sx={{ color: '#e0e0e0' }}>\n            <Close />\n          </IconButton>\n        </Box>\n      </DialogTitle>\n\n      <DialogContent sx={{ p: 0 }}>\n        <Box sx={{ borderBottom: 1, borderColor: 'rgba(255, 255, 255, 0.1)' }}>\n          <Tabs \n            value={currentTab} \n            onChange={handleTabChange}\n            sx={{\n              '& .MuiTab-root': { \n                color: '#a0a0a0',\n                '&.Mui-selected': { color: '#00ffff' }\n              },\n              '& .MuiTabs-indicator': { backgroundColor: '#00ffff' }\n            }}\n          >\n            <Tab icon={<Assessment />} iconPosition=\"start\" label=\"Overview\" />\n            <Tab icon={<TrendingUp />} iconPosition=\"start\" label=\"Progress\" />\n            <Tab icon={<EmojiEvents />} iconPosition=\"start\" label=\"Gamification\" />\n            <Tab icon={<Psychology />} iconPosition=\"start\" label=\"AI Insights\" />\n          </Tabs>\n        </Box>\n\n        <TabPanel value={currentTab} index={0}>\n          {renderOverviewTab()}\n        </TabPanel>\n        <TabPanel value={currentTab} index={1}>\n          {renderProgressTab()}\n        </TabPanel>\n        <TabPanel value={currentTab} index={2}>\n          {renderGamificationTab()}\n        </TabPanel>\n        <TabPanel value={currentTab} index={3}>\n          {renderAIInsightsTab()}\n        </TabPanel>\n      </DialogContent>\n    </StyledDialog>\n  );\n};\n\nexport default ClientDetailsModal;