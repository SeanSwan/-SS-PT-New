/**
 * Bulk Action Dialog
 * Manage multiple clients simultaneously with bulk operations
 */

import React, { useState } from 'react';
import {
  Dialog,
  DialogTitle,
  DialogContent,
  DialogActions,
  Typography,
  Box,
  Grid,
  Card,
  CardContent,
  Button,
  IconButton,
  Tabs,
  Tab,
  FormControl,
  InputLabel,
  Select,
  MenuItem,
  TextField,
  FormControlLabel,
  Checkbox,
  Divider,
  List,
  ListItem,
  ListItemText,
  ListItemIcon,
  Alert,
  AlertTitle,
  Stepper,
  Step,
  StepLabel,
  Paper,
  Chip,
  Avatar,
  Badge
} from '@mui/material';
import { styled } from '@mui/material/styles';
import {
  Close,
  Send,
  Group,
  Message,
  Email,
  Phone,
  Schedule,
  Assignment,
  Person,
  FitnessCenter,
  LocalOffer,
  Notifications,
  Download,
  Upload,
  Edit,
  Delete,
  Block,
  CheckCircle,
  Warning,
  Info,
  Refresh,
  PersonAdd,
  PersonRemove,
  Settings,
  SmartToy,
  BarChart
} from '@mui/icons-material';

interface BulkActionDialogProps {
  open: boolean;
  onClose: () => void;
  selectedClients: string[];
  onAction: (action: BulkAction) => void;
}

interface BulkAction {
  type: 'message' | 'email' | 'phone' | 'assign_trainer' | 'assign_program' | 
        'create_sessions' | 'update_status' | 'export_data' | 'send_assessment' |
        'bulk_notification' | 'progress_report' | 'deactivate' | 'reset_password';
  data: any;
  targetClients: string[];
}

interface TabPanelProps {
  children?: React.ReactNode;
  index: number;
  value: number;
}

function TabPanel(props: TabPanelProps) {
  const { children, value, index, ...other } = props;
  return (
    <div
      role="tabpanel"
      hidden={value !== index}
      id={`bulk-action-tabpanel-${index}`}
      aria-labelledby={`bulk-action-tab-${index}`}
      {...other}
    >
      {value === index && <Box sx={{ p: 0 }}>{children}</Box>}
    </div>
  );
}

const StyledDialog = styled(Dialog)(({ theme }) => ({
  '& .MuiDialog-paper': {
    backgroundColor: '#1d1f2b',
    color: '#e0e0e0',
    borderRadius: 12,
    maxWidth: '90vw',
    width: 800,
    height: '80vh',
  },
}));

const ActionCard = styled(Card)(({ theme }) => ({
  backgroundColor: 'rgba(255, 255, 255, 0.02)',
  backdropFilter: 'blur(10px)',
  borderRadius: 12,
  border: '1px solid rgba(255, 255, 255, 0.1)',
  cursor: 'pointer',
  transition: 'all 0.3s ease',
  '&:hover': {
    backgroundColor: 'rgba(255, 255, 255, 0.05)',
    borderColor: 'rgba(0, 255, 255, 0.3)',
    transform: 'translateY(-2px)',
    boxShadow: '0 8px 24px rgba(0, 255, 255, 0.1)',
  },
}));

const StyledTextField = styled(TextField)(({ theme }) => ({
  '& .MuiInputBase-root': {
    backgroundColor: 'rgba(255, 255, 255, 0.05)',
    color: '#e0e0e0',
    borderRadius: 8,
  },
  '& .MuiInputLabel-root': {
    color: '#a0a0a0',
  },
  '& .MuiOutlinedInput-notchedOutline': {
    borderColor: 'rgba(255, 255, 255, 0.2)',
  },
  '& .MuiInputBase-root:hover .MuiOutlinedInput-notchedOutline': {
    borderColor: 'rgba(0, 255, 255, 0.5)',
  },
  '& .MuiInputBase-root.Mui-focused .MuiOutlinedInput-notchedOutline': {
    borderColor: '#00ffff',
  },
}));

const CustomButton = styled(Button)(({ theme }) => ({
  borderRadius: 8,
  textTransform: 'none',
  fontWeight: 600,
  '&.primary': {
    background: 'linear-gradient(135deg, #00ffff, #00c8ff)',
    color: '#0a0a1a',
    '&:hover': {
      background: 'linear-gradient(135deg, #00e6ff, #00b3ff)',
    },
  },
  '&.secondary': {
    backgroundColor: 'rgba(255, 255, 255, 0.05)',
    color: '#e0e0e0',
    border: '1px solid rgba(255, 255, 255, 0.2)',
    '&:hover': {
      backgroundColor: 'rgba(255, 255, 255, 0.1)',
    },
  },
}));

const BulkActionDialog: React.FC<BulkActionDialogProps> = ({ open, onClose, selectedClients, onAction }) => {
  const [currentTab, setCurrentTab] = useState(0);
  const [actionData, setActionData] = useState<any>({});
  const [selectedAction, setSelectedAction] = useState<string>('');

  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {
    setCurrentTab(newValue);
  };

  const handleActionSelect = (actionType: string) => {
    setSelectedAction(actionType);
    setActionData({});
  };

  const handleSubmitAction = () => {
    const action: BulkAction = {
      type: selectedAction as any,
      data: actionData,
      targetClients: selectedClients
    };
    onAction(action);
  };

  // Communication Actions Tab
  const renderCommunicationTab = () => (
    <Box sx={{ p: 3 }}>\n      <Grid container spacing={3}>\n        {/* Message Action */}\n        <Grid item xs={12} md={6}>\n          <ActionCard onClick={() => handleActionSelect('message')}>\n            <CardContent>\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n                <Box\n                  sx={{\n                    width: 48,\n                    height: 48,\n                    borderRadius: '50%',\n                    bgcolor: 'rgba(33, 150, 243, 0.2)',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center'\n                  }}\n                >\n                  <Message sx={{ color: '#2196f3', fontSize: 24 }} />\n                </Box>\n                <Box>\n                  <Typography variant="h6">Send Messages</Typography>\n                  <Typography variant="body2" color="text.secondary">\n                    Send in-app messages to selected clients\n                  </Typography>\n                </Box>\n              </Box>\n            </CardContent>\n          </ActionCard>\n        </Grid>\n\n        {/* Email Action */}\n        <Grid item xs={12} md={6}>\n          <ActionCard onClick={() => handleActionSelect('email')}>\n            <CardContent>\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n                <Box\n                  sx={{\n                    width: 48,\n                    height: 48,\n                    borderRadius: '50%',\n                    bgcolor: 'rgba(76, 175, 80, 0.2)',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center'\n                  }}\n                >\n                  <Email sx={{ color: '#4caf50', fontSize: 24 }} />\n                </Box>\n                <Box>\n                  <Typography variant="h6">Send Emails</Typography>\n                  <Typography variant="body2" color="text.secondary">\n                    Send email notifications to selected clients\n                  </Typography>\n                </Box>\n              </Box>\n            </CardContent>\n          </ActionCard>\n        </Grid>\n\n        {/* Phone Campaigns */}\n        <Grid item xs={12} md={6}>\n          <ActionCard onClick={() => handleActionSelect('phone')}>\n            <CardContent>\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n                <Box\n                  sx={{\n                    width: 48,\n                    height: 48,\n                    borderRadius: '50%',\n                    bgcolor: 'rgba(255, 152, 0, 0.2)',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center'\n                  }}\n                >\n                  <Phone sx={{ color: '#ff9800', fontSize: 24 }} />\n                </Box>\n                <Box>\n                  <Typography variant="h6">Schedule Calls</Typography>\n                  <Typography variant="body2" color="text.secondary">\n                    Create call list for personal outreach\n                  </Typography>\n                </Box>\n              </Box>\n            </CardContent>\n          </ActionCard>\n        </Grid>\n\n        {/* Bulk Notifications */}\n        <Grid item xs={12} md={6}>\n          <ActionCard onClick={() => handleActionSelect('bulk_notification')}>\n            <CardContent>\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n                <Box\n                  sx={{\n                    width: 48,\n                    height: 48,\n                    borderRadius: '50%',\n                    bgcolor: 'rgba(156, 39, 176, 0.2)',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center'\n                  }}\n                >\n                  <Notifications sx={{ color: '#9c27b0', fontSize: 24 }} />\n                </Box>\n                <Box>\n                  <Typography variant="h6">Push Notifications</Typography>\n                  <Typography variant="body2" color="text.secondary">\n                    Send push notifications to mobile apps\n                  </Typography>\n                </Box>\n              </Box>\n            </CardContent>\n          </ActionCard>\n        </Grid>\n      </Grid>\n\n      {/* Message Form */}\n      {selectedAction === 'message' && (\n        <Box sx={{ mt: 3 }}>\n          <Typography variant="h6" sx={{ mb: 2, color: '#00ffff' }}>\n            Compose Message\n          </Typography>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <StyledTextField\n                fullWidth\n                label=\"Subject\"\n                value={actionData.subject || ''}\n                onChange={(e) => setActionData(prev => ({ ...prev, subject: e.target.value }))}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <StyledTextField\n                fullWidth\n                label=\"Message\"\n                multiline\n                rows={4}\n                value={actionData.message || ''}\n                onChange={(e) => setActionData(prev => ({ ...prev, message: e.target.value }))}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={actionData.urgent || false}\n                    onChange={(e) => setActionData(prev => ({ ...prev, urgent: e.target.checked }))}\n                    sx={{ color: '#00ffff' }}\n                  />\n                }\n                label=\"Mark as urgent\"\n              />\n            </Grid>\n          </Grid>\n        </Box>\n      )}\n\n      {/* Email Form */}\n      {selectedAction === 'email' && (\n        <Box sx={{ mt: 3 }}>\n          <Typography variant="h6" sx={{ mb: 2, color: '#00ffff' }}>\n            Compose Email\n          </Typography>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <FormControl fullWidth>\n                <InputLabel sx={{ color: '#a0a0a0' }}>Email Template</InputLabel>\n                <Select\n                  value={actionData.template || ''}\n                  onChange={(e) => setActionData(prev => ({ ...prev, template: e.target.value }))}\n                  sx={{\n                    color: '#e0e0e0',\n                    '& .MuiOutlinedInput-notchedOutline': {\n                      borderColor: 'rgba(255, 255, 255, 0.2)'\n                    }\n                  }}\n                >\n                  <MenuItem value=\"welcome\">Welcome Email</MenuItem>\n                  <MenuItem value=\"reminder\">Session Reminder</MenuItem>\n                  <MenuItem value=\"progress\">Progress Update</MenuItem>\n                  <MenuItem value=\"custom\">Custom Message</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <StyledTextField\n                fullWidth\n                label=\"Subject\"\n                value={actionData.subject || ''}\n                onChange={(e) => setActionData(prev => ({ ...prev, subject: e.target.value }))}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <StyledTextField\n                fullWidth\n                label=\"Message\"\n                multiline\n                rows={6}\n                value={actionData.message || ''}\n                onChange={(e) => setActionData(prev => ({ ...prev, message: e.target.value }))}\n              />\n            </Grid>\n          </Grid>\n        </Box>\n      )}\n\n      {/* Phone Campaign Form */}\n      {selectedAction === 'phone' && (\n        <Box sx={{ mt: 3 }}>\n          <Typography variant="h6" sx={{ mb: 2, color: '#00ffff' }}>\n            Phone Campaign\n          </Typography>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <StyledTextField\n                fullWidth\n                label=\"Campaign Name\"\n                value={actionData.campaignName || ''}\n                onChange={(e) => setActionData(prev => ({ ...prev, campaignName: e.target.value }))}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <StyledTextField\n                fullWidth\n                label=\"Call Script Template\"\n                select\n                value={actionData.script || ''}\n                onChange={(e) => setActionData(prev => ({ ...prev, script: e.target.value }))}\n              >\n                <MenuItem value=\"check-in\">Check-in Call</MenuItem>\n                <MenuItem value=\"motivation\">Motivation Call</MenuItem>\n                <MenuItem value=\"session-booking\">Session Booking</MenuItem>\n                <MenuItem value=\"feedback\">Feedback Collection</MenuItem>\n              </StyledTextField>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <StyledTextField\n                fullWidth\n                label=\"Preferred Call Time\"\n                type=\"time\"\n                value={actionData.callTime || ''}\n                onChange={(e) => setActionData(prev => ({ ...prev, callTime: e.target.value }))}\n                InputLabelProps={{ shrink: true }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <StyledTextField\n                fullWidth\n                label=\"Call Notes\"\n                multiline\n                rows={3}\n                placeholder=\"Additional notes for the call...\"\n                value={actionData.notes || ''}\n                onChange={(e) => setActionData(prev => ({ ...prev, notes: e.target.value }))}\n              />\n            </Grid>\n          </Grid>\n        </Box>\n      )}\n\n      {/* Notification Form */}\n      {selectedAction === 'bulk_notification' && (\n        <Box sx={{ mt: 3 }}>\n          <Typography variant="h6\" sx={{ mb: 2, color: '#00ffff' }}>\n            Push Notification\n          </Typography>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <StyledTextField\n                fullWidth\n                label=\"Notification Title\"\n                value={actionData.title || ''}\n                onChange={(e) => setActionData(prev => ({ ...prev, title: e.target.value }))}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <StyledTextField\n                fullWidth\n                label=\"Notification Content\"\n                multiline\n                rows={3}\n                value={actionData.content || ''}\n                onChange={(e) => setActionData(prev => ({ ...prev, content: e.target.value }))}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl fullWidth>\n                <InputLabel sx={{ color: '#a0a0a0' }}>Priority</InputLabel>\n                <Select\n                  value={actionData.priority || 'normal'}\n                  onChange={(e) => setActionData(prev => ({ ...prev, priority: e.target.value }))}\n                  sx={{\n                    color: '#e0e0e0',\n                    '& .MuiOutlinedInput-notchedOutline': {\n                      borderColor: 'rgba(255, 255, 255, 0.2)'\n                    }\n                  }}\n                >\n                  <MenuItem value=\"low\">Low</MenuItem>\n                  <MenuItem value=\"normal\">Normal</MenuItem>\n                  <MenuItem value=\"high\">High</MenuItem>\n                  <MenuItem value=\"urgent\">Urgent</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <StyledTextField\n                fullWidth\n                label=\"Action URL (optional)\"\n                placeholder=\"https://...\"\n                value={actionData.actionUrl || ''}\n                onChange={(e) => setActionData(prev => ({ ...prev, actionUrl: e.target.value }))}\n              />\n            </Grid>\n          </Grid>\n        </Box>\n      )}\n    </Box>\n  );\n\n  // Management Actions Tab\n  const renderManagementTab = () => (\n    <Box sx={{ p: 3 }}>\n      <Grid container spacing={3}>\n        {/* Assign Trainer */}\n        <Grid item xs={12} md={6}>\n          <ActionCard onClick={() => handleActionSelect('assign_trainer')}>\n            <CardContent>\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n                <Box\n                  sx={{\n                    width: 48,\n                    height: 48,\n                    borderRadius: '50%',\n                    bgcolor: 'rgba(33, 150, 243, 0.2)',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center'\n                  }}\n                >\n                  <PersonAdd sx={{ color: '#2196f3', fontSize: 24 }} />\n                </Box>\n                <Box>\n                  <Typography variant=\"h6\">Assign Trainer</Typography>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    Bulk assign trainer to selected clients\n                  </Typography>\n                </Box>\n              </Box>\n            </CardContent>\n          </ActionCard>\n        </Grid>\n\n        {/* Assign Program */}\n        <Grid item xs={12} md={6}>\n          <ActionCard onClick={() => handleActionSelect('assign_program')}>\n            <CardContent>\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n                <Box\n                  sx={{\n                    width: 48,\n                    height: 48,\n                    borderRadius: '50%',\n                    bgcolor: 'rgba(76, 175, 80, 0.2)',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center'\n                  }}\n                >\n                  <FitnessCenter sx={{ color: '#4caf50', fontSize: 24 }} />\n                </Box>\n                <Box>\n                  <Typography variant=\"h6\">Assign Program</Typography>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    Assign workout programs in bulk\n                  </Typography>\n                </Box>\n              </Box>\n            </CardContent>\n          </ActionCard>\n        </Grid>\n\n        {/* Create Sessions */}\n        <Grid item xs={12} md={6}>\n          <ActionCard onClick={() => handleActionSelect('create_sessions')}>\n            <CardContent>\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n                <Box\n                  sx={{\n                    width: 48,\n                    height: 48,\n                    borderRadius: '50%',\n                    bgcolor: 'rgba(255, 152, 0, 0.2)',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center'\n                  }}\n                >\n                  <Schedule sx={{ color: '#ff9800', fontSize: 24 }} />\n                </Box>\n                <Box>\n                  <Typography variant=\"h6\">Create Sessions</Typography>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    Bulk create training sessions\n                  </Typography>\n                </Box>\n              </Box>\n            </CardContent>\n          </ActionCard>\n        </Grid>\n\n        {/* Update Status */}\n        <Grid item xs={12} md={6}>\n          <ActionCard onClick={() => handleActionSelect('update_status')}>\n            <CardContent>\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n                <Box\n                  sx={{\n                    width: 48,\n                    height: 48,\n                    borderRadius: '50%',\n                    bgcolor: 'rgba(156, 39, 176, 0.2)',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center'\n                  }}\n                >\n                  <Settings sx={{ color: '#9c27b0', fontSize: 24 }} />\n                </Box>\n                <Box>\n                  <Typography variant=\"h6\">Update Status</Typography>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    Change client status in bulk\n                  </Typography>\n                </Box>\n              </Box>\n            </CardContent>\n          </ActionCard>\n        </Grid>\n      </Grid>\n\n      {/* Assign Trainer Form */}\n      {selectedAction === 'assign_trainer' && (\n        <Box sx={{ mt: 3 }}>\n          <Typography variant=\"h6\" sx={{ mb: 2, color: '#00ffff' }}>\n            Assign Trainer\n          </Typography>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <FormControl fullWidth>\n                <InputLabel sx={{ color: '#a0a0a0' }}>Select Trainer</InputLabel>\n                <Select\n                  value={actionData.trainerId || ''}\n                  onChange={(e) => setActionData(prev => ({ ...prev, trainerId: e.target.value }))}\n                  sx={{\n                    color: '#e0e0e0',\n                    '& .MuiOutlinedInput-notchedOutline': {\n                      borderColor: 'rgba(255, 255, 255, 0.2)'\n                    }\n                  }}\n                >\n                  <MenuItem value=\"trainer1\">John Smith - Strength Specialist</MenuItem>\n                  <MenuItem value=\"trainer2\">Sarah Johnson - Cardio Expert</MenuItem>\n                  <MenuItem value=\"trainer3\">Mike Wilson - Rehabilitation</MenuItem>\n                  <MenuItem value=\"trainer4\">Emily Brown - Yoga & Flexibility</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <StyledTextField\n                fullWidth\n                label=\"Number of Sessions to Create\"\n                type=\"number\"\n                value={actionData.sessionCount || 1}\n                onChange={(e) => setActionData(prev => ({ ...prev, sessionCount: parseInt(e.target.value) }))}\n                inputProps={{ min: 1, max: 50 }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={actionData.notifyClients || false}\n                    onChange={(e) => setActionData(prev => ({ ...prev, notifyClients: e.target.checked }))}\n                    sx={{ color: '#00ffff' }}\n                  />\n                }\n                label=\"Notify clients of trainer assignment\"\n              />\n            </Grid>\n          </Grid>\n        </Box>\n      )}\n\n      {/* Assign Program Form */}\n      {selectedAction === 'assign_program' && (\n        <Box sx={{ mt: 3 }}>\n          <Typography variant=\"h6\" sx={{ mb: 2, color: '#00ffff' }}>\n            Assign Workout Program\n          </Typography>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <FormControl fullWidth>\n                <InputLabel sx={{ color: '#a0a0a0' }}>Select Program</InputLabel>\n                <Select\n                  value={actionData.programId || ''}\n                  onChange={(e) => setActionData(prev => ({ ...prev, programId: e.target.value }))}\n                  sx={{\n                    color: '#e0e0e0',\n                    '& .MuiOutlinedInput-notchedOutline': {\n                      borderColor: 'rgba(255, 255, 255, 0.2)'\n                    }\n                  }}\n                >\n                  <MenuItem value=\"beginner-strength\">Beginner Strength Program</MenuItem>\n                  <MenuItem value=\"cardio-blast\">Cardio Blast 30-Day</MenuItem>\n                  <MenuItem value=\"weight-loss\">Weight Loss Journey</MenuItem>\n                  <MenuItem value=\"muscle-building\">Muscle Building Phase</MenuItem>\n                  <MenuItem value=\"athletic-performance\">Athletic Performance</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <StyledTextField\n                fullWidth\n                label=\"Start Date\"\n                type=\"date\"\n                value={actionData.startDate || ''}\n                onChange={(e) => setActionData(prev => ({ ...prev, startDate: e.target.value }))}\n                InputLabelProps={{ shrink: true }}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <StyledTextField\n                fullWidth\n                label=\"Program Duration (weeks)\"\n                type=\"number\"\n                value={actionData.duration || 4}\n                onChange={(e) => setActionData(prev => ({ ...prev, duration: parseInt(e.target.value) }))}\n                inputProps={{ min: 1, max: 52 }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={actionData.autoProgress || false}\n                    onChange={(e) => setActionData(prev => ({ ...prev, autoProgress: e.target.checked }))}\n                    sx={{ color: '#00ffff' }}\n                  />\n                }\n                label=\"Auto-progress clients based on performance\"\n              />\n            </Grid>\n          </Grid>\n        </Box>\n      )}\n\n      {/* Create Sessions Form */}\n      {selectedAction === 'create_sessions' && (\n        <Box sx={{ mt: 3 }}>\n          <Typography variant=\"h6\" sx={{ mb: 2, color: '#00ffff' }}>\n            Create Training Sessions\n          </Typography>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <StyledTextField\n                fullWidth\n                label=\"Session Type\"\n                select\n                value={actionData.sessionType || ''}\n                onChange={(e) => setActionData(prev => ({ ...prev, sessionType: e.target.value }))}\n              >\n                <MenuItem value=\"personal-training\">Personal Training</MenuItem>\n                <MenuItem value=\"group-session\">Group Session</MenuItem>\n                <MenuItem value=\"virtual-session\">Virtual Session</MenuItem>\n                <MenuItem value=\"assessment\">Fitness Assessment</MenuItem>\n              </StyledTextField>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <StyledTextField\n                fullWidth\n                label=\"Sessions per Client\"\n                type=\"number\"\n                value={actionData.sessionCount || 1}\n                onChange={(e) => setActionData(prev => ({ ...prev, sessionCount: parseInt(e.target.value) }))}\n                inputProps={{ min: 1, max: 20 }}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <StyledTextField\n                fullWidth\n                label=\"Session Duration (minutes)\"\n                type=\"number\"\n                value={actionData.duration || 60}\n                onChange={(e) => setActionData(prev => ({ ...prev, duration: parseInt(e.target.value) }))}\n                inputProps={{ min: 15, max: 180, step: 15 }}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl fullWidth>\n                <InputLabel sx={{ color: '#a0a0a0' }}>Default Trainer</InputLabel>\n                <Select\n                  value={actionData.defaultTrainer || ''}\n                  onChange={(e) => setActionData(prev => ({ ...prev, defaultTrainer: e.target.value }))}\n                  sx={{\n                    color: '#e0e0e0',\n                    '& .MuiOutlinedInput-notchedOutline': {\n                      borderColor: 'rgba(255, 255, 255, 0.2)'\n                    }\n                  }}\n                >\n                  <MenuItem value=\"auto\">Auto-assign based on availability</MenuItem>\n                  <MenuItem value=\"trainer1\">John Smith</MenuItem>\n                  <MenuItem value=\"trainer2\">Sarah Johnson</MenuItem>\n                  <MenuItem value=\"trainer3\">Mike Wilson</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <StyledTextField\n                fullWidth\n                label=\"Session Notes/Instructions\"\n                multiline\n                rows={3}\n                value={actionData.instructions || ''}\n                onChange={(e) => setActionData(prev => ({ ...prev, instructions: e.target.value }))}\n              />\n            </Grid>\n          </Grid>\n        </Box>\n      )}\n\n      {/* Update Status Form */}\n      {selectedAction === 'update_status' && (\n        <Box sx={{ mt: 3 }}>\n          <Typography variant=\"h6\" sx={{ mb: 2, color: '#00ffff' }}>\n            Update Client Status\n          </Typography>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <FormControl fullWidth>\n                <InputLabel sx={{ color: '#a0a0a0' }}>New Status</InputLabel>\n                <Select\n                  value={actionData.status || ''}\n                  onChange={(e) => setActionData(prev => ({ ...prev, status: e.target.value }))}\n                  sx={{\n                    color: '#e0e0e0',\n                    '& .MuiOutlinedInput-notchedOutline': {\n                      borderColor: 'rgba(255, 255, 255, 0.2)'\n                    }\n                  }}\n                >\n                  <MenuItem value=\"active\">Active</MenuItem>\n                  <MenuItem value=\"inactive\">Inactive</MenuItem>\n                  <MenuItem value=\"suspended\">Suspended</MenuItem>\n                  <MenuItem value=\"on-hold\">On Hold</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <StyledTextField\n                fullWidth\n                label=\"Reason for Status Change\"\n                multiline\n                rows={3}\n                value={actionData.reason || ''}\n                onChange={(e) => setActionData(prev => ({ ...prev, reason: e.target.value }))}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={actionData.notifyClients || false}\n                    onChange={(e) => setActionData(prev => ({ ...prev, notifyClients: e.target.checked }))}\n                    sx={{ color: '#00ffff' }}\n                  />\n                }\n                label=\"Send notification to clients about status change\"\n              />\n            </Grid>\n          </Grid>\n        </Box>\n      )}\n    </Box>\n  );\n\n  // Analytics & Reports Tab\n  const renderAnalyticsTab = () => (\n    <Box sx={{ p: 3 }}>\n      <Grid container spacing={3}>\n        {/* Export Data */}\n        <Grid item xs={12} md={6}>\n          <ActionCard onClick={() => handleActionSelect('export_data')}>\n            <CardContent>\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n                <Box\n                  sx={{\n                    width: 48,\n                    height: 48,\n                    borderRadius: '50%',\n                    bgcolor: 'rgba(33, 150, 243, 0.2)',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center'\n                  }}\n                >\n                  <Download sx={{ color: '#2196f3', fontSize: 24 }} />\n                </Box>\n                <Box>\n                  <Typography variant=\"h6\">Export Client Data</Typography>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    Export selected client information\n                  </Typography>\n                </Box>\n              </Box>\n            </CardContent>\n          </ActionCard>\n        </Grid>\n\n        {/* Progress Reports */}\n        <Grid item xs={12} md={6}>\n          <ActionCard onClick={() => handleActionSelect('progress_report')}>\n            <CardContent>\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n                <Box\n                  sx={{\n                    width: 48,\n                    height: 48,\n                    borderRadius: '50%',\n                    bgcolor: 'rgba(76, 175, 80, 0.2)',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center'\n                  }}\n                >\n                  <BarChart sx={{ color: '#4caf50', fontSize: 24 }} />\n                </Box>\n                <Box>\n                  <Typography variant=\"h6\">Generate Progress Reports</Typography>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    Create comprehensive progress reports\n                  </Typography>\n                </Box>\n              </Box>\n            </CardContent>\n          </ActionCard>\n        </Grid>\n\n        {/* Send Assessments */}\n        <Grid item xs={12} md={6}>\n          <ActionCard onClick={() => handleActionSelect('send_assessment')}>\n            <CardContent>\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n                <Box\n                  sx={{\n                    width: 48,\n                    height: 48,\n                    borderRadius: '50%',\n                    bgcolor: 'rgba(255, 152, 0, 0.2)',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center'\n                  }}\n                >\n                  <Assignment sx={{ color: '#ff9800', fontSize: 24 }} />\n                </Box>\n                <Box>\n                  <Typography variant=\"h6\">Send Assessments</Typography>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    Send fitness assessments to clients\n                  </Typography>\n                </Box>\n              </Box>\n            </CardContent>\n          </ActionCard>\n        </Grid>\n\n        {/* AI Analysis */}\n        <Grid item xs={12} md={6}>\n          <ActionCard onClick={() => handleActionSelect('ai_analysis')}>\n            <CardContent>\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n                <Box\n                  sx={{\n                    width: 48,\n                    height: 48,\n                    borderRadius: '50%',\n                    bgcolor: 'rgba(156, 39, 176, 0.2)',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center'\n                  }}\n                >\n                  <SmartToy sx={{ color: '#9c27b0', fontSize: 24 }} />\n                </Box>\n                <Box>\n                  <Typography variant=\"h6\">AI Analysis</Typography>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    Generate AI insights for selected clients\n                  </Typography>\n                </Box>\n              </Box>\n            </CardContent>\n          </ActionCard>\n        </Grid>\n      </Grid>\n\n      {/* Export Data Form */}\n      {selectedAction === 'export_data' && (\n        <Box sx={{ mt: 3 }}>\n          <Typography variant=\"h6\" sx={{ mb: 2, color: '#00ffff' }}>\n            Export Client Data\n          </Typography>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Typography variant=\"body2\" sx={{ mb: 2 }}>Select data to export:</Typography>\n              <FormGroup>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={actionData.includePersonalInfo || true}\n                      onChange={(e) => setActionData(prev => ({ ...prev, includePersonalInfo: e.target.checked }))}\n                      sx={{ color: '#00ffff' }}\n                    />\n                  }\n                  label=\"Personal Information\"\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={actionData.includeProgress || true}\n                      onChange={(e) => setActionData(prev => ({ ...prev, includeProgress: e.target.checked }))}\n                      sx={{ color: '#00ffff' }}\n                    />\n                  }\n                  label=\"Progress Data\"\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={actionData.includeWorkouts || false}\n                      onChange={(e) => setActionData(prev => ({ ...prev, includeWorkouts: e.target.checked }))}\n                      sx={{ color: '#00ffff' }}\n                    />\n                  }\n                  label=\"Workout History\"\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={actionData.includeAssessments || false}\n                      onChange={(e) => setActionData(prev => ({ ...prev, includeAssessments: e.target.checked }))}\n                      sx={{ color: '#00ffff' }}\n                    />\n                  }\n                  label=\"Assessment Results\"\n                />\n              </FormGroup>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl fullWidth>\n                <InputLabel sx={{ color: '#a0a0a0' }}>Export Format</InputLabel>\n                <Select\n                  value={actionData.format || 'csv'}\n                  onChange={(e) => setActionData(prev => ({ ...prev, format: e.target.value }))}\n                  sx={{\n                    color: '#e0e0e0',\n                    '& .MuiOutlinedInput-notchedOutline': {\n                      borderColor: 'rgba(255, 255, 255, 0.2)'\n                    }\n                  }}\n                >\n                  <MenuItem value=\"csv\">CSV (Spreadsheet)</MenuItem>\n                  <MenuItem value=\"pdf\">PDF Report</MenuItem>\n                  <MenuItem value=\"json\">JSON Data</MenuItem>\n                  <MenuItem value=\"excel\">Excel Workbook</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n        </Box>\n      )}\n\n      {/* Progress Report Form */}\n      {selectedAction === 'progress_report' && (\n        <Box sx={{ mt: 3 }}>\n          <Typography variant=\"h6\" sx={{ mb: 2, color: '#00ffff' }}>\n            Generate Progress Reports\n          </Typography>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <StyledTextField\n                fullWidth\n                label=\"Report Period Start\"\n                type=\"date\"\n                value={actionData.startDate || ''}\n                onChange={(e) => setActionData(prev => ({ ...prev, startDate: e.target.value }))}\n                InputLabelProps={{ shrink: true }}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <StyledTextField\n                fullWidth\n                label=\"Report Period End\"\n                type=\"date\"\n                value={actionData.endDate || ''}\n                onChange={(e) => setActionData(prev => ({ ...prev, endDate: e.target.value }))}\n                InputLabelProps={{ shrink: true }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl fullWidth>\n                <InputLabel sx={{ color: '#a0a0a0' }}>Report Type</InputLabel>\n                <Select\n                  value={actionData.reportType || ''}\n                  onChange={(e) => setActionData(prev => ({ ...prev, reportType: e.target.value }))}\n                  sx={{\n                    color: '#e0e0e0',\n                    '& .MuiOutlinedInput-notchedOutline': {\n                      borderColor: 'rgba(255, 255, 255, 0.2)'\n                    }\n                  }}\n                >\n                  <MenuItem value=\"summary\">Progress Summary</MenuItem>\n                  <MenuItem value=\"detailed\">Detailed Analysis</MenuItem>\n                  <MenuItem value=\"comparison\">Before/After Comparison</MenuItem>\n                  <MenuItem value=\"goals\">Goal Achievement Report</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={actionData.includePhotos || false}\n                    onChange={(e) => setActionData(prev => ({ ...prev, includePhotos: e.target.checked }))}\n                    sx={{ color: '#00ffff' }}\n                  />\n                }\n                label=\"Include progress photos\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={actionData.sendToClients || false}\n                    onChange={(e) => setActionData(prev => ({ ...prev, sendToClients: e.target.checked }))}\n                    sx={{ color: '#00ffff' }}\n                  />\n                }\n                label=\"Automatically send reports to clients\"\n              />\n            </Grid>\n          </Grid>\n        </Box>\n      )}\n\n      {/* Send Assessment Form */}\n      {selectedAction === 'send_assessment' && (\n        <Box sx={{ mt: 3 }}>\n          <Typography variant=\"h6\" sx={{ mb: 2, color: '#00ffff' }}>\n            Send Fitness Assessment\n          </Typography>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <FormControl fullWidth>\n                <InputLabel sx={{ color: '#a0a0a0' }}>Assessment Type</InputLabel>\n                <Select\n                  value={actionData.assessmentType || ''}\n                  onChange={(e) => setActionData(prev => ({ ...prev, assessmentType: e.target.value }))}\n                  sx={{\n                    color: '#e0e0e0',\n                    '& .MuiOutlinedInput-notchedOutline': {\n                      borderColor: 'rgba(255, 255, 255, 0.2)'\n                    }\n                  }}\n                >\n                  <MenuItem value=\"initial\">Initial Fitness Assessment</MenuItem>\n                  <MenuItem value=\"progress\">Progress Check Assessment</MenuItem>\n                  <MenuItem value=\"specialized\">Specialized Assessment</MenuItem>\n                  <MenuItem value=\"goal-specific\">Goal-Specific Assessment</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <StyledTextField\n                fullWidth\n                label=\"Due Date\"\n                type=\"date\"\n                value={actionData.dueDate || ''}\n                onChange={(e) => setActionData(prev => ({ ...prev, dueDate: e.target.value }))}\n                InputLabelProps={{ shrink: true }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <StyledTextField\n                fullWidth\n                label=\"Additional Instructions\"\n                multiline\n                rows={3}\n                value={actionData.instructions || ''}\n                onChange={(e) => setActionData(prev => ({ ...prev, instructions: e.target.value }))}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={actionData.sendReminders || true}\n                    onChange={(e) => setActionData(prev => ({ ...prev, sendReminders: e.target.checked }))}\n                    sx={{ color: '#00ffff' }}\n                  />\n                }\n                label=\"Send reminder notifications\"\n              />\n            </Grid>\n          </Grid>\n        </Box>\n      )}\n    </Box>\n  );\n\n  return (\n    <StyledDialog open={open} onClose={onClose}>\n      <DialogTitle sx={{ \n        display: 'flex', \n        justifyContent: 'space-between', \n        alignItems: 'center',\n        bgcolor: '#252742',\n        borderBottom: '1px solid rgba(0, 255, 255, 0.2)'\n      }}>\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n          <Box\n            sx={{\n              width: 40,\n              height: 40,\n              borderRadius: '50%',\n              bgcolor: 'rgba(0, 255, 255, 0.2)',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center'\n            }}\n          >\n            <Group sx={{ color: '#00ffff' }} />\n          </Box>\n          <Box>\n            <Typography variant=\"h6\" sx={{ color: '#e0e0e0', fontWeight: 600 }}>\n              Bulk Actions\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              {selectedClients.length} client{selectedClients.length > 1 ? 's' : ''} selected\n            </Typography>\n          </Box>\n        </Box>\n        <IconButton onClick={onClose} sx={{ color: '#e0e0e0' }}>\n          <Close />\n        </IconButton>\n      </DialogTitle>\n\n      <Box sx={{ borderBottom: 1, borderColor: 'rgba(255, 255, 255, 0.1)' }}>\n        <Tabs \n          value={currentTab} \n          onChange={handleTabChange}\n          sx={{\n            '& .MuiTab-root': { \n              color: '#a0a0a0',\n              '&.Mui-selected': { color: '#00ffff' }\n            },\n            '& .MuiTabs-indicator': { backgroundColor: '#00ffff' }\n          }}\n        >\n          <Tab icon={<Message />} iconPosition=\"start\" label=\"Communication\" />\n          <Tab icon={<Settings />} iconPosition=\"start\" label=\"Management\" />\n          <Tab icon={<BarChart />} iconPosition=\"start\" label=\"Analytics & Reports\" />\n        </Tabs>\n      </Box>\n\n      <DialogContent sx={{ p: 0, height: 'calc(80vh - 200px)', overflow: 'auto' }}>\n        <TabPanel value={currentTab} index={0}>\n          {renderCommunicationTab()}\n        </TabPanel>\n        <TabPanel value={currentTab} index={1}>\n          {renderManagementTab()}\n        </TabPanel>\n        <TabPanel value={currentTab} index={2}>\n          {renderAnalyticsTab()}\n        </TabPanel>\n      </DialogContent>\n\n      <DialogActions sx={{ p: 3, bgcolor: '#1a1d29', borderTop: '1px solid rgba(255, 255, 255, 0.1)' }}>\n        <CustomButton\n          className=\"secondary\"\n          onClick={onClose}\n        >\n          Cancel\n        </CustomButton>\n        \n        <Box sx={{ flex: 1 }} />\n        \n        {selectedAction && (\n          <CustomButton\n            className=\"primary\"\n            onClick={handleSubmitAction}\n            startIcon={<Send />}\n          >\n            Execute Action\n          </CustomButton>\n        )}\n      </DialogActions>\n    </StyledDialog>\n  );\n};\n\nexport default BulkActionDialog;