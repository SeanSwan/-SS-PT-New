#!/bin/bash

echo "üö® RENDER DEPLOY FAILURE DIAGNOSTIC - SWAN ALCHEMIST"
echo "=================================================="
echo ""
echo "If your Render service shows 'Deploy Failed', run this diagnostic:"
echo ""

echo "üîç COMMON DEPLOY FAILURE PATTERNS:"
echo "=================================="
echo ""
echo "1. DEPENDENCY ISSUES:"
echo "   Error pattern: 'npm ERR!' or 'Cannot find module'"
echo "   Solution: Dependencies may be missing or incompatible"
echo ""
echo "2. BUILD COMMAND FAILURE:"
echo "   Error pattern: 'Build failed' or script errors"
echo "   Solution: Check if npm run render-start exists"
echo ""
echo "3. ENVIRONMENT VARIABLE MISSING:"
echo "   Error pattern: 'DATABASE_URL' or 'PORT' undefined"
echo "   Solution: Verify all required env vars are set"
echo ""
echo "4. DATABASE CONNECTION:"
echo "   Error pattern: 'Connection refused' or 'database does not exist'"
echo "   Solution: PostgreSQL service needs to be attached"
echo ""

echo "üîß EMERGENCY FIXES IF DEPLOY FAILED:"
echo "===================================="
echo ""
echo "1. CHECK ENVIRONMENT VARIABLES:"
echo "   Render Dashboard ‚Üí Service ‚Üí Environment"
echo "   Required: DATABASE_URL, NODE_ENV, PORT, JWT_SECRET"
echo ""
echo "2. VERIFY BUILD COMMAND:"
echo "   Should be: npm install"
echo "   Start Command: npm run render-start"
echo ""
echo "3. CHECK PACKAGE.JSON:"
echo "   Verify 'render-start' script exists in backend/package.json"
echo ""
echo "4. FORCE REDEPLOY:"
echo "   Render Dashboard ‚Üí Manual Deploy ‚Üí Deploy Latest Commit"
echo ""

echo "üìã CRITICAL ENVIRONMENT VARIABLES CHECKLIST:"
echo "============================================"
echo "DATABASE_URL - PostgreSQL connection string"
echo "NODE_ENV - Should be 'production'"
echo "PORT - Should be '10000'"  
echo "JWT_SECRET - Any secret key"
echo "FRONTEND_ORIGINS - 'https://sswanstudios.com,https://www.sswanstudios.com'"
echo ""
echo "If any of these are missing, the deploy will fail!"
